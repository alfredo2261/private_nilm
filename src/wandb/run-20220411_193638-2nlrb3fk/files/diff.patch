diff --git a/src_3/.DS_Store b/src_3/.DS_Store
index 5008ddf..25c5da8 100644
Binary files a/src_3/.DS_Store and b/src_3/.DS_Store differ
diff --git a/src_3/.ipynb_checkpoints/clustered_federated_learning-checkpoint.ipynb b/src_3/.ipynb_checkpoints/clustered_federated_learning-checkpoint.ipynb
new file mode 100644
index 0000000..e351969
--- /dev/null
+++ b/src_3/.ipynb_checkpoints/clustered_federated_learning-checkpoint.ipynb
@@ -0,0 +1,446 @@
+{
+ "cells": [
+  {
+   "cell_type": "code",
+   "execution_count": 1,
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "ModuleNotFoundError",
+     "evalue": "No module named 'models'",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
+      "\u001b[0;32m<ipython-input-1-c5b96329b2fe>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mmodels\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mConvNet\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mhelper\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mExperimentLogger\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdisplay_train_stats\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mfl_devices\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mServer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mClient\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'models'"
+     ]
+    }
+   ],
+   "source": [
+    "%matplotlib inline\n",
+    "from IPython.display import clear_output\n",
+    "import os\n",
+    "from copy import deepcopy\n",
+    "\n",
+    "import torch\n",
+    "from torch.utils.data import DataLoader\n",
+    "from torchvision import datasets, transforms\n",
+    "import pandas as pd\n",
+    "import numpy as np\n",
+    "import matplotlib.pyplot as plt\n",
+    "\n",
+    "from models import ConvNet\n",
+    "from helper import ExperimentLogger, display_train_stats\n",
+    "from fl_devices import Server, Client\n",
+    "from data_utils import split_noniid, CustomSubset\n",
+    "\n",
+    "from sklearn.cluster import AgglomerativeClustering\n",
+    "\n",
+    "from dataloaders import make_train_data\n",
+    "\n",
+    "\n",
+    "torch.manual_seed(42)\n",
+    "np.random.seed(42)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "We will run experiments with the EMNIST data set of handwritten characters. We simulate a scenario with 10 clients and distribute the data among the clients in a non-iid way accoding to a dirichlet distribution parametrized with alpha=1.0 . The distribution of data is shown below."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 2,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/Users/alfredorodriguez/opt/anaconda3/lib/python3.8/site-packages/torchvision/datasets/mnist.py:65: UserWarning: train_labels has been renamed targets\n",
+      "  warnings.warn(\"train_labels has been renamed targets\")\n"
+     ]
+    }
+   ],
+   "source": [
+    "N_CLIENTS = 10\n",
+    "DIRICHLET_ALPHA = 1.0\n",
+    "\n",
+    "\n",
+    "data = datasets.EMNIST(root=\".\", split=\"byclass\", download=True)\n",
+    "\n",
+    "mapp = np.array(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C',\n",
+    "       'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\n",
+    "       'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c',\n",
+    "       'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',\n",
+    "       'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'], dtype='<U1')\n",
+    "\n",
+    "idcs = np.random.permutation(len(data))\n",
+    "train_idcs, test_idcs = idcs[:10000], idcs[10000:20000]\n",
+    "train_labels = data.train_labels.numpy()\n",
+    "\n",
+    "client_idcs = split_noniid(train_idcs, train_labels, alpha=DIRICHLET_ALPHA, n_clients=N_CLIENTS)\n",
+    "\n",
+    "client_data = [CustomSubset(data, idcs) for idcs in client_idcs]\n",
+    "test_data = CustomSubset(data, test_idcs, transforms.Compose([transforms.ToTensor()]))"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "client_data = "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 3,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "[<data_utils.CustomSubset at 0x7fefb17a8220>,\n",
+       " <data_utils.CustomSubset at 0x7fefb221a250>,\n",
+       " <data_utils.CustomSubset at 0x7fefb221a460>,\n",
+       " <data_utils.CustomSubset at 0x7fefb221a520>,\n",
+       " <data_utils.CustomSubset at 0x7fefb221a580>,\n",
+       " <data_utils.CustomSubset at 0x7fefb221a610>,\n",
+       " <data_utils.CustomSubset at 0x7fefb221a670>,\n",
+       " <data_utils.CustomSubset at 0x7fefb221a6d0>,\n",
+       " <data_utils.CustomSubset at 0x7fefb221a730>,\n",
+       " <data_utils.CustomSubset at 0x7fefb221a790>]"
+      ]
+     },
+     "execution_count": 3,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "client_data"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 4,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "iVBORw0KGgoAAAANSUhEUgAABIQAAADCCAYAAAA4nBlUAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAABID0lEQVR4nO3dfXhV1Zn38e8tEwJWpNaXVgSJRUxJMA0QmdpWBxM6IIO10aq0toWxJRcdG8y0ajEtM5mZJzTY1DIG6wuWoVoqMFBqhukLDpLazigmNLFEaW2RgFRBa0u1hGhC1/PH3sQEEsg+a4dzcvh9rouLnH3OWvve5/3c+15rmXMOERERERERERE5eZyS7ABEREREREREROTEUkJIREREREREROQko4SQiIiIiIiIiMhJRgkhEREREREREZGTjBJCIiIiIiIiIiInGSWEREREREREREROMn+V7AAAzjrrLJeVlZXsMERERERERERE0sbWrVt/75w7u6frUiIhlJWVRUNDQ7LDEBERERERERFJG2a2q7frNGRMREREREREROQko4SQiIiIiIiIiMhJRgkhEREREREREZGTTErMISQiIiIiIiIi0pP29nb27NlDW1tbskNJWUOGDGHkyJFkZGT0uY0SQiIiIiIiIiKSsvbs2cOwYcPIysrCzJIdTspxzvHaa6+xZ88eLrjggj63U0Ioxbxnc5N3H3uvyPfuQ0RERERERCQVtLW1KRl0DGbGmWeeyauvvhqpneYQEhEREREREZGUpmTQsSVy/yghJCIiIiIiIiJyDHv37mXWrFmMGTOGnJwcZsyYwfPPP09LSwvjx48HoKGhgfnz5ye8j0WLFvV63datW7n44ou58MILmT9/Ps65hPdzmIaMiYiIiIiIiMiAkbXgv2Ptr6Xq7455vXOO4uJiZs+ezapVqwBoampi3759jBo1qvN2BQUFFBQUJBzHokWLKC8v7/G6z3/+8zzwwAN84AMfYMaMGfz4xz/myiuvTHhfoAohEREREREREZFebd68mYyMDObNm9e5LT8/n8suu6zb7erq6pg5cyYABw4c4KabbuKSSy5hwoQJPProowCsWLGCa665hunTpzN27Fhuv/12ABYsWMDBgwfJz8/nxhtv7Nbvyy+/zOuvv86ll16KmfGZz3yGH/zgB97HpQohEREREREREZFeNDc3M2nSpEhtKisrKSwsZPny5ezfv5/JkyczdepUIKguamxsJDMzk+zsbEpLS6mqqmLp0qU0NTUd1dfvfvc7Ro4c2Xl55MiR/O53v/M6JlBCSEREREREREQkVhs3bqS2tpbq6mogWClt9+7dABQVFTF8+HAAcnJy2LVrV7ehZ0fqab6gOCbZVkJIpBfv2dzk1X7vFfmxxCEiIiIiIiLJk5uby9q1ayO1cc6xbt06srOzu23fsmULmZmZnZcHDRpER0fHMfsaOXIke/bs6by8Z88eRowYESmenighFDPfJILEQ4+DiIiIiIiIxKGwsJDy8nKWLVvG3LlzAaivr6e1tZXRo0f32GbatGnU1NRQU1ODmdHY2MiECROOuZ+MjAza29vJyMjotv3cc89l2LBhPPXUU/z1X/81Dz30EKWlpd7HpUmlRURERERERER6YWasX7+exx57jDFjxpCbm0tFRcUxq3QWLlxIe3s7eXl5jB8/noULFx53PyUlJeTl5R01qTTAvffey+c+9zkuvPBCxowZ473CGID1Ze16M2sB3gAOAR3OuQIzexewGsgCWoDrnXN/DG9/B/DZ8PbznXM/OVb/BQUFrqGhIfGjSCGpUJmioUrxPA4r3bVe7W+0dV7t9TiKiIiIiIjA9u3bGTduXLLDSHk93U9mttU5V9DT7aNUCF3hnMvv0tECYJNzbiywKbyMmeUAs4BcYDrwLTMbFO0wRERERERERESkv/jMIXQ1MCX8+ztAHfDlcPsq59ybwE4z+y0wGXjSY18DRrKrSkREREREREREjqevFUIO2GhmW82sJNz2bufcywDh/+eE288DXuzSdk+4rRszKzGzBjNrePXVVxOLXkREREREREREIutrhdCHnHMvmdk5wGNm9qtj3NZ62HbUREXOuQeAByCYQ6iPcYiIiIiIiIiIiKc+VQg5514K/38FWE8wBGyfmZ0LEP7/SnjzPcCoLs1HAi/FFbCIiIiIiIiIiPg5boWQmb0DOMU590b4998C/wrUArOBqvD/R8MmtcD3zOwuYAQwFni6H2JPS75zEAV2xNCHiIiIiIiIiKSrvlQIvRv4uZk9Q5DY+W/n3I8JEkEfMbPfAB8JL+OcexZYAzwH/Bi42Tl3qD+CFxERERERERHpb3v37mXWrFmMGTOGnJwcZsyYwfPPP09LSwvjx48HoKGhgfnz5ye8j0WLFvV63Ve+8hVGjRrFaaedlnD/RzpuhZBz7gXg/T1sfw0o6qVNJVDpHZ2IiIiIiIiISFcVw2Pu70/HvNo5R3FxMbNnz2bVqlUANDU1sW/fPkaNenvGnIKCAgoKChIOY9GiRZSXl/d43VVXXcUXvvAFxo4dm3D/R+rrKmMiIiIiIiIiIiedzZs3k5GRwbx58zq35efnc9lll3W7XV1dHTNnzgTgwIED3HTTTVxyySVMmDCBRx8NZtlZsWIF11xzDdOnT2fs2LHcfvvtACxYsICDBw+Sn5/PjTfeeFQMH/jABzj33HNjPa6+rjImMqDEMxdTcr1nc5N3H3uvyPfuQ0RERERE5GTW3NzMpEmTIrWprKyksLCQ5cuXs3//fiZPnszUqVOBoLqosbGRzMxMsrOzKS0tpaqqiqVLl9LU1NQPR9AzJYRERERERERERGK0ceNGamtrqa6uBqCtrY3du3cDUFRUxPDhwbC3nJwcdu3a1W3o2YmihJAcRZUpIiIiIiIiIoHc3FzWrl0bqY1zjnXr1pGdnd1t+5YtW8jMzOy8PGjQIDo6OmKJMyolhNJQHAkdEREREREREYHCwkLKy8tZtmwZc+fOBaC+vp7W1lZGjx7dY5tp06ZRU1NDTU0NZkZjYyMTJkw45n4yMjJob28nIyMj9mPoiSaVFhERERERERHphZmxfv16HnvsMcaMGUNubi4VFRWMGDGi1zYLFy6kvb2dvLw8xo8fz8KFC4+7n5KSEvLy8nqcVPr2229n5MiRtLa2MnLkSCoqKnwOCQBzznl34qugoMA1NDQkO4xYbHp8TLJD4EZbl+wQkj5kTI9DINmPg4iIiIiIiK/t27czbty4ZIeR8nq6n8xsq3OuoKfbq0JIREREREREROQko4SQiIiIiIiIiMhJRpNKS7/wndhaQ51gpbs2hl52xNCHiIiIiIiIpBslhFLMz574tH8nf+PfxUAXx/142eUPxxBJ4uI4hqLCGAIRERERERGRtKMhYyIiIiIiIiIiJxlVCElK8h1y1tBW5B3Dr0luhZCIiIiIiIhIf1FCKMV8LoZExn0xxCEiIiIiIiIigb1791JWVkZ9fT2ZmZlkZWWxZMkSBg8ezMyZM2lubqahoYGHHnqIu+++O6F9LFq0iPLy8qO2t7a2ct1117Fjxw4GDRrEVVddRVVVle8hKSEkIiIiIiIiIgPHxd+5ONb+ts3edszrnXMUFxcze/ZsVq1aBUBTUxP79u1j1KhRnbcrKCigoKAg4Th6SwgB3HrrrVxxxRW89dZbFBUV8aMf/Ygrr7wy4X2BEkIpZ/XOxTH08v9i6ENERERERERENm/eTEZGBvPmzevclp+fD0BLS0vntrq6Oqqrq9mwYQMHDhygtLSUbdu20dHRQUVFBVdffTUrVqygtraW1tZWduzYQXFxMXfeeScLFizg4MGD5Ofnk5uby8qVKzv7PfXUU7niiisAGDx4MBMnTmTPnj3ex6WEkIiIiIiIiIhIL5qbm5k0aVKkNpWVlRQWFrJ8+XL279/P5MmTmTp1KhBUFzU2NpKZmUl2djalpaVUVVWxdOlSmpqajtnv/v37+a//+i9uueWWRA+nkxJCKWbIGV9MdggS8l32feXl1/rtH/9l50VEREREROTE27hxI7W1tVRXVwPQ1tbG7t27ASgqKmL48OEA5OTksGvXrm5Dz3rT0dHBJz7xCebPn8973/te7xiVEBIRERERERER6UVubi5r166N1MY5x7p168jOzu62fcuWLWRmZnZeHjRoEB0dHX3qs6SkhLFjx1JWVhYplt70OSFkZoOABuB3zrmZZvYuYDWQBbQA1zvn/hje9g7gs8AhYL5z7iexRCsDxkrnVx1zo62LKZKBK44V50RERERERMRPYWEh5eXlLFu2jLlz5wJQX19Pa2sro0eP7rHNtGnTqKmpoaamBjOjsbGRCRMmHHM/GRkZtLe3k5GRcdR1X/3qV/nTn/7Egw8+6H9AoVMi3PYWYHuXywuATc65scCm8DJmlgPMAnKB6cC3wmSSiIiIiIiIiMiAYmasX7+exx57jDFjxpCbm0tFRQUjRozotc3ChQtpb28nLy+P8ePHs3DhwuPup6SkhLy8PG688cZu2/fs2UNlZSXPPfccEydOJD8/P5bEkDnnjn8js5HAd4BK4IthhdCvgSnOuZfN7FygzjmXHVYH4Zz7Wtj2J0CFc+7J3vovKChwDQ0N3geTCjY9Psar/a/WLPOO4X3Xz/VqH0d1jm+FkK/sjSu8+3hwyCav9pdd/rBX+ziOYWTVZd59iIiIiIiIJNP27dsZN25cssNIeT3dT2a21TlX0NPt+1ohtAS4HfhLl23vds69DBD+f064/TzgxS632xNuExERERERERGRFHDcOYTMbCbwinNuq5lN6UOf1sO2o8qQzKwEKAE4//zz+9DtyaGw7mbvPl663q99sqt7RERERERERKR/9WVS6Q8BHzWzGcAQ4HQz+y6wz8zO7TJk7JXw9nuAruuljQReOrJT59wDwAMQDBnzOAaRfjFsu+cwxsvjiUNEREREREQkbscdMuacu8M5N9I5l0UwWfTjzrlPAbXA7PBms4FHw79rgVlmlmlmFwBjgadjj1xERERERERERBLS52Xne1AFrDGzzwK7gesAnHPPmtka4DmgA7jZOXfIO1KRCFbvXJzsEERERERERERSVqSEkHOuDqgL/34NKOrldpUEK5KJiIiIiIiIiEiK6esqYyIiIiIiIiIiJ6W9e/cya9YsxowZQ05ODjNmzOD555+npaWF8ePHA9DQ0MD8+fMT3seiRYt6vW769Om8//3vJzc3l3nz5nHokP9ALJ8hYyL95mdPfNqr/TA8J4QWERERERGRlLT9feNi7W/cr7Yf83rnHMXFxcyePZtVq1YB0NTUxL59+xg16u01tQoKCigoKEg4jkWLFlFeXt7jdWvWrOH000/HOcfHP/5x/vM//5NZs2YlvC9QhZCIiIiIiIiISK82b95MRkYG8+bN69yWn5/PZZdd1u12dXV1zJw5E4ADBw5w0003cckllzBhwgQefTRYh2vFihVcc801TJ8+nbFjx3L77bcDsGDBAg4ePEh+fj433njjUTGcfvrpAHR0dPDWW29hZt7HpYSQiIiIiIiIiEgvmpubmTRpUqQ2lZWVFBYWUl9fz+bNm7nttts4cOAAEFQXrV69mm3btrF69WpefPFFqqqqGDp0KE1NTaxcubLHPqdNm8Y555zDsGHD+PjHP+59XBoyJv3Cd8jX59p6nK+8z1ZryJiIiIiIiIgkycaNG6mtraW6uhqAtrY2du/eDUBRURHDhw8HICcnh127dnUbetabn/zkJ7S1tXHjjTfy+OOP85GPfMQrRiWERPqJb1IsO6Y4RCR1vGdzk1f7vVfkxxKHiIiIiPRdbm4ua9eujdTGOce6devIzu7+y27Lli1kZmZ2Xh40aBAdHR197nfIkCF89KMf5dFHH1VCSOLnm8gQERERERERSReFhYWUl5ezbNky5s6dC0B9fT2tra2MHj26xzbTpk2jpqaGmpoazIzGxkYmTJhwzP1kZGTQ3t5ORkZGt+1//vOfeeONNzj33HPp6Ojghz/84VHzFyVCCSEREZETZKW71rOHHbHEISIiIiJ9Z2asX7+esrIyqqqqGDJkCFlZWSxZsqTXNgsXLqSsrIy8vDycc2RlZbFhw4Zj7qekpIS8vDwmTpzYbR6hAwcO8NGPfpQ333yTQ4cOUVhY2G2C64SPyznn3YmvgoIC19CQHnO+bHp8jFf7Ef8w2DuGl771llf7VKgQ8p5DaOfimCJJ3BvjEl9uEGDYdv/XxJdWH/sNR0ROrIqKiqS2F5HUo6GkIiLHt337dsaNi3ep+XTU0/1kZludcz3+OFWFkPQL34SOiIiIyMlAlYMiIpIsWnZeREREREREROQkowohkV4MOeOLXu3f4ImYIhEREZF05TtUv6gwpkBEROSko4SQSC/uu/QWr/bX7vQtARcRERERERHpH0oISb/wndT5hgu+HFMkIiIiIiIiInIkJYTSUCqsEiYiIiIiIiIiqUuTSouIiIiIiIiIHMPevXuZNWsWY8aMIScnhxkzZvD888/T0tLC+PHjAWhoaGD+/PkJ72PRokXHvc1HP/rRzv35UoWQpCXfCaEDfnMIiYiIiIiISPzumfd4rP3dfN+xZ+h3zlFcXMzs2bNZtWoVAE1NTezbt49Ro0Z13q6goICCgoKE41i0aBHl5eW9Xv/973+f0047LeH+j6SEkKSlwrqbvfu471K9PERERERERE52mzdvJiMjg3nz5nVuy8/PB6ClpaVzW11dHdXV1WzYsIEDBw5QWlrKtm3b6OjooKKigquvvpoVK1ZQW1tLa2srO3bsoLi4mDvvvJMFCxZw8OBB8vPzyc3NZeXKld1i+POf/8xdd93FAw88wPXXXx/LcekXb8x85++5gdUxRZJc8VToiIiIiIiIiCRXc3MzkyZNitSmsrKSwsJCli9fzv79+5k8eTJTp04FguqixsZGMjMzyc7OprS0lKqqKpYuXUpTU1OP/S1cuJAvfelLnHrqqb6H00kJIUlJvquUzYgpDhEREZH+9Lm2omSHICIi/WDjxo3U1tZSXV0NQFtbG7t37wagqKiI4cOHA5CTk8OuXbu6DT07UlNTE7/97W/55je/2a0iyddxJ5U2syFm9rSZPWNmz5rZv4Tb32Vmj5nZb8L/z+jS5g4z+62Z/drMpsUWrYiIiIiIiIjICZSbm8vWrVsjtXHOsW7dOpqammhqamL37t2MGzcOgMzMzM7bDRo0iI6OjmP29eSTT7J161aysrL48Ic/zPPPP8+UKVMiH8eR+rLK2JtAoXPu/UA+MN3MPgAsADY558YCm8LLmFkOMAvIBaYD3zKzQd6RioiIiIiIiIicYIWFhbz55pssW7asc1t9fT0//elPe20zbdo0ampqcM4B0NjYeNz9ZGRk0N7eftT2z3/+87z00ku0tLTw85//nIsuuoi6urroB3KE4w4Zc0H0fz4cX/jPAVcDU8Lt3wHqgC+H21c5594EdprZb4HJwJPe0Q4AvmW/b6TJHELpYNvO3V7tK+IJQ0RERERERJLIzFi/fj1lZWVUVVUxZMgQsrKyWLJkSa9tFi5cSFlZGXl5eTjnyMrKYsOGDcfcT0lJCXl5eUycOPGoSaX7Q5/mEAorfLYCFwL3OOe2mNm7nXMvAzjnXjazc8Kbnwc81aX5nnDbkX2WACUA559/fuJHIEfxTUo9OGRTTJGIiIiIyLH4zpv4JS6LKRIRkYHjeMvE94cRI0awZs2aHq9rbm4GYMqUKZ1DuYYOHcr9999/1G3nzJnDnDlzOi93TRItXryYxYuP/bmQlZXVuT9ffUoIOecOAflm9k5gvZmNP8bNracueujzAeABgIKCgqOul4HNd9n3H75/TEyRiIiIiIiIiMiRIq0y5pzbb2Z1BHMD7TOzc8PqoHOBV8Kb7QG6To89EngpjmDlxIhjtQsNfRMRERERERFJXX1ZZezssDIIMxsKTAV+BdQCs8ObzQYeDf+uBWaZWaaZXQCMBZ6OOW4REREREREREUlQXyqEzgW+E84jdAqwxjm3wcyeBNaY2WeB3cB1AM65Z81sDfAc0AHcHA45ExERkZPcezY3efex94p87z5ERERETnZ9WWXsl8CEHra/BvQ4tsg5VwlUekcnSeE7uSHAijsijUY8yrwnv+gZgd8cRiIiIiIiIiLpzO9Xu6SkOBI6IiIiIiIiIpK+lBASERERERERiYHv0GgNi05de/fupaysjPr6ejIzM8nKymLJkiUMHjyYmTNn0tzcTENDAw899BB33313QvtYtGgR5eXlPV43ZcoUXn75ZYYOHQrAxo0bOeeccxI+HlBCKC0NOcNvuFXbH++KKRIRERERERGReH3jhpmx9vel1RuOeb1zjuLiYmbPns2qVasAaGpqYt++fYwa9fYi6wUFBRQUFCQcx7ESQgArV6706v9ISgjJUXwTSoFbYuhDREREREREJLk2b95MRkYG8+bN69yWn58PQEtLS+e2uro6qqur2bBhAwcOHKC0tJRt27bR0dFBRUUFV199NStWrKC2tpbW1lZ27NhBcXExd955JwsWLODgwYPk5+eTm5vLypUr+/24lBASEREREREREelFc3MzkyZNitSmsrKSwsJCli9fzv79+5k8eTJTp04FguqixsZGMjMzyc7OprS0lKqqKpYuXUpTU1Ovff793/89gwYN4tprr+WrX/0qZuZzWEoIiaSqeCq1RERERERE5ETbuHEjtbW1VFdXA9DW1sbu3bsBKCoqYvjw4QDk5OSwa9eubkPPerJy5UrOO+883njjDa699loefvhhPvOZz3jFqIRQirnec7l2gDVf81ty/fEp93jHICIiIiIiIpIOcnNzWbt2baQ2zjnWrVtHdnZ2t+1btmwhMzOz8/KgQYPo6Og4bn/nnXceAMOGDeOTn/wkTz/9tHdC6BSv1iIiIiIiIiIiaaywsJA333yTZcuWdW6rr6/npz/9aa9tpk2bRk1NDc45ABobG4+7n4yMDNrb24/a3tHRwe9//3sA2tvb2bBhA+PHj496GEdRhZCkpTgqrbbtjCEQERERkWPQEHERkdRnZqxfv56ysjKqqqoYMmRI57LzvVm4cCFlZWXk5eXhnCMrK4sNG469mllJSQl5eXlMnDix26TSb775JtOmTaO9vZ1Dhw4xdepU5s6d631cSghJv9i2c7dXew1aExERERERkZ4cb5n4/jBixAjWrFnT43XNzc0ATJkyhSlTpgAwdOhQ7r///qNuO2fOHObMmdN5uWuSaPHixSxevPioNu94xzvYunWrR/Q905AxEREREREREZGTjBJCIiIiIiIiIiInGQ0Zk5RUWOe3Utp9l+qpLSKp53NtRckOQURSjO93HtgeSxwiEo+V7lrPHnbEEodIX+hXs0iK8v+CCPqSKCIiIiIiIj1RQkhEREROGP8zp6CzpyIikqp+9sSnvdoXFcYUiEgfKCEkR4mlMmWWfxciIiIiIiIi0j80qbSIiIiIiIiIyDHs3buXWbNmMWbMGHJycpgxYwbPP/88LS0tjB8/HoCGhgbmz5+f8D4WLVrU63VvvfUWJSUlXHTRRbzvfe9j3bp1Ce/nMFUIiYiIyAnjW0oPKqcXkdSz6fEx3n0UFWo4rEhf7Vnws1j7G1l12TGvd85RXFzM7NmzWbVqFQBNTU3s27ePUaNGdd6uoKCAgoKChONYtGgR5eXlPV5XWVnJOeecw/PPP89f/vIX/vCHPyS8n8NUISQiIiIiIiIi0ovNmzeTkZHBvHnzOrfl5+dz2WXdE0l1dXXMnDkTgAMHDnDTTTdxySWXMGHCBB599FEAVqxYwTXXXMP06dMZO3Yst99+OwALFizg4MGD5Ofnc+ONNx4Vw/Lly7njjjsAOOWUUzjrrLO8j+u4CSEzG2Vmm81su5k9a2a3hNvfZWaPmdlvwv/P6NLmDjP7rZn92symeUcpIiIiIiIiIpIEzc3NTJo0KVKbyspKCgsLqa+vZ/Pmzdx2220cOHAACKqLVq9ezbZt21i9ejUvvvgiVVVVDB06lKamJlauXNmtr/379wOwcOFCJk6cyHXXXce+ffu8j6svQ8Y6gC85535hZsOArWb2GDAH2OScqzKzBcAC4MtmlkMwpXAuMAL4HzO7yDl3yDtaERERGdA+11aU7BBERERE+t3GjRupra2luroagLa2Nnbv3g1AUVERw4cPByAnJ4ddu3Z1G3p2pI6ODvbs2cOHPvQh7rrrLu666y5uvfVWHn74Ya8Yj5sQcs69DLwc/v2GmW0HzgOuBqaEN/sOUAd8Ody+yjn3JrDTzH4LTAae9IpUBpSstu95tf8Rt8YUiYiIiIiIiEjicnNzWbt2baQ2zjnWrVtHdnZ2t+1btmwhMzOz8/KgQYPo6Og4Zl9nnnkmp556KsXFxQBcd911fPvb344UT08izSFkZlnABGAL8O4wWXQ4aXROeLPzgBe7NNsTbhMRERERERERGVAKCwt58803WbZsWee2+vp6fvrTn/baZtq0adTU1OCcA6CxsfG4+8nIyKC9vf2o7WbGVVddRV1dHQCbNm0iJycn4lEcrc+rjJnZacA6oMw597qZ9XrTHra5HvorAUoAzj///L6GISIiCXjP5iav9nuvyI8lDhEREZH+4vt9B/SdR3pmZqxfv56ysjKqqqoYMmQIWVlZLFmypNc2CxcupKysjLy8PJxzZGVlsWHDhmPup6SkhLy8PCZOnHjUPEKLFy/m05/+NGVlZZx99tn8x3/8h/dx9SkhZGYZBMmglc6574eb95nZuc65l83sXOCVcPseoOvgt5HAS0f26Zx7AHgAoKCg4KiEkchA5ztPxhusjikSEZHUsXrnYu8+vsSxl4YVERGR9Ha8ZeL7w4gRI1izZk2P1zU3NwMwZcoUpkyZAsDQoUO5//77j7rtnDlzmDNnTuflrkmixYsXs3hxz9+VRo8ezRNPPJFg9D07bkLIglKgbwPbnXN3dbmqFpgNVIX/P9pl+/fM7C6CSaXHAk/HGXQqe3T/0eVdIiLJttJd69nDjljiEBERERGR1NCXCqEPAZ8GtplZU7itnCARtMbMPgvsBq4DcM49a2ZrgOcIVii7WSuMycnI9yz4ijv6PKKzV9u8exAREREREZF01JdVxn5Oz/MCAfQ4JsY5VwlUesQlIiIi0i80p5aIiIhIhEmlRUREREQkXtd7VgSrGlhERBKlhJAcxfeLCQDb/bsY6Iac8UXPHm6JJQ4RSR2+Q0k1mbKIiIiIxEUJIRERkRPEP1EsIulm287dyQ5BJG34L6IBvgtp+K40LHIiKSEkIiIiIiLi4WdPfNq7j6LCGAI5yelxkP60d+9eysrKqK+vJzMzk6ysLJYsWcLgwYOZOXMmzc3NNDQ08NBDD3H33XcntI9FixZRXl5+1PY33niDyy57u1J8z549fOpTn2LJkiWJHg6ghJBIytIZQxERERERkaNVVFSc0P6ccxQXFzN79mxWrVoFQFNTE/v27WPUqFGdtysoKKCgoCDhOHpLCA0bNoympqbOy5MmTeKaa65JeD+HKSEk0k8K627262BWPHGIgP8ZM50tExEREZGT1ebNm8nIyGDevHmd2/Lz8wFoaWnp3FZXV0d1dTUbNmzgwIEDlJaWsm3bNjo6OqioqODqq69mxYoV1NbW0trayo4dOyguLubOO+9kwYIFHDx4kPz8fHJzc1m5cmWPsfzmN7/hlVde6VYxlCglhERERE4Q70SxZuwXEUlJmjdGDtMCEumpubmZSZMmRWpTWVlJYWEhy5cvZ//+/UyePJmpU6cCQXVRY2MjmZmZZGdnU1paSlVVFUuXLu1WCdSTRx55hBtuuAEzS/RwOikhFDPfL/v3XaqHRERERGQgeM/mJu8+9vqHIQL4Px/3XpEfSxwiEti4cSO1tbVUV1cD0NbWxu7dwbQgRUVFDB8+HICcnBx27drVbejZsaxatYqHH344lhiVfZCUdP0demqmg1i+KOvLSSx05lJERCS9+a+w5be6lkg6y83NZe3atZHaOOdYt24d2dnZ3bZv2bKFzMzMzsuDBg2io6OjT30+88wzdHR0RK5W6o1+dYuIiIiIiMiApxNg0l8KCwspLy9n2bJlzJ07F4D6+npaW1sZPXp0j22mTZtGTU0NNTU1mBmNjY1MmDDhmPvJyMigvb2djIyMHq9/5JFH+MQnPuF3MF0oISQi/cb/TBXobJWISHpKhyrSeD7nREQk1ZkZ69evp6ysjKqqKoYMGdK57HxvFi5cSFlZGXl5eTjnyMrKYsOGDcfcT0lJCXl5eUycOLHHSaXXrFnDD3/4Q9/D6aSEkIiIiJxUNKxCRERkYIt72fm+GDFiBGvWrOnxuubmZgCmTJnClClTABg6dCj333//UbedM2cOc+bM6bzcNUm0ePFiFi/ufWLyF154IYHIe3dKrL2JiIiIiIiIiEjKU4WQiIicFDY9PsarfVGhqkJShe9Qo6MLsEVEREROPkoIiYgch5ZxFRGR/pLV9j2v9i3xhCEiIichJYQkLW3buTvZIYhImvGtMAIYweAYIhERSS06cSIiMjApISQiIieFnz3xaa/2l13+cEyRiIiIiIgknxJCIiIifZC9cYV3H29Q4h+IiIiIiEgMlBBKQ9ffoYdVUoNvRQZAUWEMgYiISMpZ6a6NoRdN9i4iIifG3r17KSsro76+nszMTLKysliyZAmDBw9m5syZNDc309DQwEMPPcTdd9+d0D4WLVpEeXl5j9c98sgjLFq0CDNjxIgRfPe73+Wss87yOSQlhOKWDsmYOObfyfIPQyRl+P9o0Q8WkcOGnPFF7z7iSSRIsumkgUi8fF9Tej3JQBLH3I5dHW81WeccxcXFzJ49m1WrVgHQ1NTEvn37GDVqVOftCgoKKCgoSDiO3hJCHR0d3HLLLTz33HOcddZZ3H777SxdupSKioqE9wV9SAiZ2XJgJvCKc258uO1dwGqC3/0twPXOuT+G190BfBY4BMx3zv3EK0KRAco3ObhtZ0yBJNHn2oqSHUIs9AVLAFbvXOzdx4wY4hARSTU6cZIa0uV7l0gq2rx5MxkZGcybN69zW35+PgAtLS2d2+rq6qiurmbDhg0cOHCA0tJStm3bRkdHBxUVFVx99dWsWLGC2tpaWltb2bFjB8XFxdx5550sWLCAgwcPkp+fT25uLitXruzs1zmHc44DBw5w5pln8vrrr3PhhRd6H1dffrGuAJYCD3XZtgDY5JyrMrMF4eUvm1kOMAvIBUYA/2NmFznnDnlHKiIiIgNeYd3N3n28dL1feyV5U8Ow7Q3JDkFioteUpIo4Tt58ictiiETSTXNzM5MmTYrUprKyksLCQpYvX87+/fuZPHkyU6dOBYLqosbGRjIzM8nOzqa0tJSqqiqWLl1KU1PTUX1lZGRw7733cvHFF/OOd7yDsWPHcs8993gf13ETQs65J8ws64jNVwNTwr+/A9QBXw63r3LOvQnsNLPfApOBJ70jFRER8ZAOPz59l3aG9Fjeuen+cX4deDYXEUlFvskQJUJE4rVx40Zqa2uprq4GoK2tjd27g+lZioqKGD58OAA5OTns2rWr29CzI7W3t3PvvffS2NjIe9/7XkpLS/na177GV7/6Va8YEx3T8m7n3MsAzrmXzeyccPt5wFNdbrcn3HYUMyuBYLmV888/P8EwRERETow45r4B/+oYEUkdccyDJBKXeD6nRKQnubm5rF27NlIb5xzr1q0jOzu72/YtW7aQmZnZeXnQoEF0dHQcs6/DVUNjxgRzJ11//fVUVVVFiqcncc+AbD1scz3d0Dn3APAAQEFBQY+3ERFJBRqTLwD3XXqLdx+Fdf5xiKQL/XhNH/qcFHmb3tvSU2FhIeXl5Sxbtoy5c+cCUF9fT2trK6NHj+6xzbRp06ipqaGmpgYzo7GxkQkTJhxzPxkZGbS3t5ORkdFt+3nnncdzzz3Hq6++ytlnn81jjz3GuHH+Jc+JJoT2mdm5YXXQucAr4fY9QNc6p5HASz4BisjApXHcqUNl5CIiIv1H33nkMP+58rbHEofEy8xYv349ZWVlVFVVMWTIkM5l53uzcOFCysrKyMvLwzlHVlYWGzZsOOZ+SkpKyMvLY+LEid0mlR4xYgT//M//zOWXX05GRgajR49mxYoV3seVaEKoFpgNVIX/P9pl+/fM7C6CSaXHAk/7BikiIiLpwXcFRoB5T/qdfb2hLeP4NxIREZGUdbxl4vvDiBEjWLNmTY/XNTc3AzBlyhSmTJkCwNChQ7n//vuPuu2cOXOYM2dO5+WuSaLFixezeHHPCeZ58+Z1W+UsDn1Zdv4RggmkzzKzPcA/EySC1pjZZ4HdwHUAzrlnzWwN8BzQAdysFcai2bZzt3cfF1+gOZkk4DsBbTpMPhuHdKiuUfmyiIj0l3T4nBQRORn1ZZWxT/RyVY+DhZ1zlUClT1AiIiJH8k1wbn7G70zSihlxT7snIiISHw1V0gkwkaj07VZE0tqmx8fE0IvWqBZJJ6pmSB+qhJVUkQqJCN8hudtiiiOZ/JNikA6JMZG+UkJIJI3N++kP/DpIgy/KcSwJfPYZl8cQiYi/le7aGHo58WPuU00q/HATSSd6TSkRISIDkxJCImks2cvApssXRJVgpwb/ZMjgWOIQkXjE8QP63254JIZIRERETk5KCImksXQYFuE7HKAhhqTYG6z27kMkDnFUvBUVxhBIkvkmEh6fck9MkQxcvu+tkBrDrfwTxaqYExGRk5cSQiKS0vy/7K+IIwyRlJDsqr84xLGa5nZGxBCJiEh6ieP9VUR6t3fvXsrKyqivryczM5OsrCyWLFnC4MGDmTlzJs3NzTQ0NPDQQw9x9913J7SPRYsWUV5e3uN1q1evprKykkOHDvF3f/d33HnnnT6HAyghJJLWfIds+Z5BXujVOpC9cUUMvYhIXLwn8Y0njKSKo7rGVypU54iIiCRL3J/Fx/tcdc5RXFzM7NmzWbVqFQBNTU3s27ePUaNGdd6uoKCAgoKChOPoLSH02muvcdttt7F161bOPvtsZs+ezaZNmygq8jtZqIRQGtLZAYmL96TUaDJmiY9vcvANSuIJREQkFEfV3gpejyESEUkVWu0tPW3evJmMjAzmzZvXuS0/Px+AlpaWzm11dXVUV1ezYcMGDhw4QGlpKdu2baOjo4OKigquvvpqVqxYQW1tLa2trezYsYPi4mLuvPNOFixYwMGDB8nPzyc3N5eVK1d29vvCCy9w0UUXcfbZZwMwdepU1q1bp4SQSE+y2r7n3UfLkE/GEMnA5vtF9426GH6Af+wB/z5EgHGzXvLs4fxY4pDku+/SW7zar3St3jHcaOu8+/ChFevi4TtXHwAXfN6/D0k63yQAKBEgksqam5uZNGlSpDaVlZUUFhayfPly9u/fz+TJk5k6dSoQVBc1NjaSmZlJdnY2paWlVFVVsXTpUpqamo7q68ILL+RXv/oVLS0tjBw5kh/84Ae89dZb3selhJCkJN8qp6x4wkiqOJJat8UQh484vhz9SAt0SRrxfU3M+aH/j89UmCxeJF3Es5rmwRj6SFwcwy7iGCIu/ny/O7bEE4aIhDZu3EhtbS3V1dUAtLW1sXt38Du3qKiI4cOHA5CTk8OuXbu6DT070hlnnMG9997LDTfcwCmnnMIHP/hBXnjhBe8YlRASSWPeS/qmQHWO79nXGy74sncMyS791Zf19OGb7P4Go2OKRE52WrFODoujWuxXLIshEhH/7zxnq1IrZXjPOZhic+Xl5uaydu3aSG2cc6xbt47s7Oxu27ds2UJmZmbn5UGDBtHR0XHc/q666iquuuoqAB544AEGDRoUKZ6eKCEkIiLHlW4f6nJy803MVez8R+8YVl6e3OXS02HFOolHHMnBs2OIQ5IvjhNQ3vNP/s3HvGOQ1OCfbE6tYcmFhYWUl5ezbNky5s6dC0B9fT2tra2MHt3zCbtp06ZRU1NDTU0NZkZjYyMTJkw45n4yMjJob28nIyPjqOteeeUVzjnnHP74xz/yrW99izVr1ngflxJCImks6cNTxvk1j0Ms8zsk+Tj8J/eGdJjg2/ex/FIKPB99y/lLuTemSBIXz9wz0nS/3xNS1TlymO+P+HnHv8lxeVckM/DHh2tRl4Bvsvm+mOKQ5PNNNp/oz7nXXz+6Nuz00y/u/NvMWL9+PWVlZVRVVTFkyJDOZed7s3DhQsrKysjLy8M5R1ZWFhs2bDhmHCUlJeTl5TFx4sRuk0oD3HLLLTzzzDMA/NM//RMXXXRRhCPsmRJCItJv4vhy5DtEJp75HfwmoPUVx5n8R2mPIZKTWxzP5yz/MCQFxPKaPMMvSbvp8TFe7bNZ4dU+jhjK7jjVO4Yl+E2oWVFR4dX+hrrVXu0Bvv6xaq/2vknan+FfIeRLVagB39cU3B1LHD58T96sdH7JwaKdv/dqH4d0SA7GUS122/YG/0CO4Xiv+5deiraYyJ//fPS200/vfnnEiBG9VuU0NzcDMGXKFKZMmQLA0KFDuf/++4+67Zw5c5gzZ07n5a5JosWLF7N4cc+vo0ceeeQYR5AYJYRE+okmxo6Hb0LHdzUhSR3+yb2fxRJHMsWT4Bz4vOf12um3/zgqD5P9WD663z9JfPXGFX4djPsH7xh8z0AP8/zBEsfiCb7FMb73QRwJzivv8Fs1L92GliQqjuF7yeb73vazJ57wav/Ztku82oP/5Nq+1cBtMSRjfF9TDb7v74B/ulxOBCWERCStxXGW5uILtNy497C1NDl7m2z+wzLA99endwk43/RqHwffL+s/euZW7xgen+LX3vdxiGPOF+/EWAzDOH2TGavp3zPYJ0I6zAeVCkNLvKuU/EPwfixX8LpX+1QYop7s+yAVNPzkDe8+fv23fu1jmXLB05GvyYfeabz1emuf22tus75RQihm6VAiKAHvpTuHfDKmSJInFSoyfH8AZ33M73EEGMYC7z58pEI1Qjr84EgHcVQjvOr5o6fB87mQRQxnb3f6vb9meUfgz/e9bZjnKpDpMow0FX60JJvvfTDjmRiqa8bpJ4Xv90aAUt/n8wWf92p+9t7kzzd4pW/l4PYq7xh8k4NDvCPwl+1Z4dNE8r97Hlnl9C7u5wJO6fv+/5Lltf+Thd69RaRX3tUIs/xjGDcr2vjfo7T5x5DsRG8cQ0t8H8vV7/eb1yD/8Tle7QNa1jgOvmcevX+Ae/5gSRfJnvQ/jiTA41Pu8exBQ3olHqmwOtaKGJLdkhpTLvgOt/qs51xOcSS6b7jgy17tU+G750vXd7/s+AvOOczMq9905pyL3EYJoTSkyhZJJ3GccUs23y+qZ8cwD9J9l/r++PTbfxzzIqzzvB9u9pw3JhXEMlG7KirSgu+X9evv8H9fmfekdxdJ53s/bttZ7B1Dlmf7VHguJFscqx82bfccw3iBf0LIN1Fbc4Hf/uMZluwphpOJvpI9l1McyZg45onz5Xvi48hFAw517OZPr5/J8NMz+pQU+sOb/gM538Mw7z5OFOccr732GkOGRKtRU0JIJI294Vk2e/0dfkOlfCduTRe+Zx3XeX7BA/9Ewj1n/LtfANvv8msPbCO5lVrpkJwE/y+abX/0fywHulgmEvbk+8PNN0kchzgSnNuf6fBq7zuXUypIheeC72NZ4bn/OH7An+258h8c9I7B+73Fc4LyOCR70v90kAqJOf8K0BjeF3b+Y7fLgwe/wsSJrzJ8+PA+tR90yO/zAeCPb6XAiyqCIUOGMHLkyEht+u3bgJlNB/4dGAQ86JzzH9ApJ410+eF1stPjGPCeIHF7DGXonpV/vqu1zXvSM6EEpMMqYanA97Fc8zW/L1i+Z7BTgSarD6TDsOLrLxj4lYe+90Eq/AD3nhw8hsrHwmf81kT6+seqvWNItjiS3ckeZh8H39UHfavFvKdLALavGuHdR6p56623eOqpp/p8+zjmxLr5vhhmrE9x/ZIQMrNBwD3AR4A9QL2Z1TrnnuuP/Um89CNeDkuFcdzpwLts952xhOHFu8Iopjh86L0t4Fs5CP4rbIk//7PwMSS17vBLaqVCIiIdfrymA9+JhOft9z/p4D10LoZCAv/3Zz96PaSGOL6vDPOs8k+FIcG+CZ1UWJl1IOivCqHJwG+dcy8AmNkq4GpACaHj0A8WkdTj+7q8LaY4ksl7brL3+M+zIanxGZEKE72nA98ffsPG+X3Zj+O55L3aWxwxJHnew1R4TfpKhcfBNxGxPYYffl9/58Cv8JF4JHsupzj4fsbEkUzxXen3R54xxFLx5t1D6uuvhNB5wItdLu8B/rqf9iWSktLhS6LE42bPZMjXY3gupcPzMR2OQeKh50LyKwkgNR6HVIhBkv84tMyKITGoZHVKJAdTgU58xDRXnmdxTToMhx0ILJGlyY7bqdl1wDTn3OfCy58GJjvnSrvcpgQoCS9mA7+OPZDUdBbw+yT3kez2qRBDOhxDKsSgY0iNGNLhGFIhBh1DasSQDseQCjHoGFIjhnQ4hlSIQceQGjGkwzGkQgw6htSIIY5jGChGO+fO7vEa51zs/4BLgZ90uXwHcEd/7Gug/QMakt1HstunQgzpcAypEIOOITViSIdjSIUYdAypEUM6HEMqxKBjSI0Y0uEYUiEGHUNqxJAOx5AKMegYUiOGOI4hHf6dQv+oB8aa2QVmNphgHYnaftqXiIiIiIiIiIhE0C9zCDnnOszsC8BPCJadX+6ce7Y/9iUiIiIiIiIiItH016TSOOd+CPywv/ofwB5IgT6S3T4VYkiHY0iFGHQMqRFDOhxDKsSgY0iNGNLhGFIhBh1DasSQDseQCjHoGFIjhnQ4hlSIQceQGjHEcQwDXr9MKi0iIiIiIiIiIqmrv+YQEhERERERERGRFKWE0AlkZtPN7Ndm9lszW5BA++Vm9oqZNSe4/1FmttnMtpvZs2Z2S8T2Q8zsaTN7Jmz/LwnGMcjMGs1sQ4LtW8xsm5k1mVlDAu3faWZrzexX4X1xaYS22eF+D/973czKEojhH8P7sNnMHjGzIRHb3xK2fTaR/Yd9FJuZM7P3JdD2UHj8z5jZL8zsgwn08R4zW2VmO8zsOTP7oZldFHH/z4YxfNHMIr2fdenj8L9EXpNH9pEVsf27zex7ZvaCmW01syfNrDhC+z8fcXmOmS2NEkNP/SQi0T66tjOzGWb2GzM7/0TsO2zrzOzhLpf/ysxejfL+FPbxjS6XbzWziohxjDSzR8Pj32Fm/x4uytDX9oefi81m9p9mdqrH/l8ws6Vmlhmxj64x/JeZvTNK+7CPr4Sv61+Gff11hLZndnkt7jWz33W5fNz70syy7IjPVzOrMLNb+7j/OjObdsS2MjP7Vh/afrPre7mZ/cTMHuxy+Rtm9sU+9DPKzHaa2bvCy2eEl0f35RjCNmZmPzezK7tsu97MftzH9sVHvC82mdlfuvbX33p6LJMtynOpH/Y934LvOyuTsO9YHgsz+79k9RHjMXh/1srAZ8HvkH9IdhwihykhdIKY2SDgHuBKIAf4hJnlROxmBTDdI4wO4EvOuXHAB4CbI8bwJlDonHs/kA9MN7MPJBDHLcD2BNp1dYVzLt85V5BA238Hfuycex/w/iixOOd+He43H5gEtALro+zczM4D5gMFzrnxBBOvz4rQfjwwF5hMEP9MMxsbJYbQJ4CfR9l3FwfD++H9wB3A16I0NjMjuN/qnHNjnHM5QDnw7oj7zwU+AswA/jlKDF36OPyvKmL7nvpo6WvD8D74AfCEc+69zrlJBI/FyATiGPDMrAioAaY753afwF0fAMab2dDw8keA30Xs403gGjM7K5EAwufC94EfOOfGAhcBpwGVEbo5/FwcD7wFzPPY/1hgKHBnhP0fGcMfgJujNLYgOT8TmOicywOmAi/2tb1z7rUu78/3Ad/s8tp8K0osCXqEo99PZ4Xbj+f/gA8CWJDcPgvI7XL9B4H/PV4nzrkXgXuBw+9nVcADzrldfYjhcB+O4PlzlwUngt5B8Fzs0+PpnFvf9X0R+BbwM4KFRiQ5/gGY4Zy7MdmBJMo5F/nEU3/0IekjTH4n47fwOwlekyIpQQmhE2cy8Fvn3AvhF9NVwNVROnDOPUHwJTshzrmXnXO/CP9+gyARcl6E9s45d/jsRkb4L9IkVGY2Evg74MHj3bY/mNnpwOXAtwGcc2855/Yn2F0RsCPKF+0u/goYamZ/BZwKvBSh7TjgKedcq3OuA/gp0OeqEgAzOw34EPBZEksIdXU68MeIba4A2p1z9x3e4Jxrcs79LOrOnXOvACXAF8IftgNFIfDWEffBLudcTRJjSgozuwxYBvydc25HEkL4EcH7EgSJ0r78gO+qg2Biwn9McP+FQJtz7j8AnHOHwr5uilrpE/oZcGEM+/9M+F6RiCeJ8PkSOhf4vXPuzTCO3zvnorw3JttaggR9JgRVBcAIgsT78fwvYUKIIBHUDLwRVvhkErzvN/Yxjm8CHwgrjj4MfOPYNz+ac64Z+C/gywTJ9ocSeW1aUPX5T8CnnXN/idj2BxZUTj5rZiVR9w38lZl9J6w2W5vIa8nMPhO2f8a6VBJGaP8VCyrD/wfITqD9pyyozG4ys/vDk4tR+7gPeC9Qa2aR36PMbKEFFdWPWVDRnEiV0yAzWxY+lhu7JOCjxJG0StYj+nivBVXul/j21cf9ZYX3/4MWVF+uNLOpZva/FlR0To7Qz3afx8GCauzm8F+Zx7Ek9Lrs+npK9LnY5X74FvALYFTE9u8ws/8O3xOazeyGqDEQJOrHhK/rr0fcf7dqNYtYkWxmi61LdZIFlYtfitD+djObH/79TTN7PPy7yMy+28c+Lgkf/yHh/fmsBSe7+xrDv1mXUS5mVnk4pgh9zLO3K1h3mtnmKO3TjRJCJ855dD/TuYfoX5ZjE35RnQBsidhukJk1Aa8AjznnIrUHlgC3A5G+GB7BARvDL4pRvyS+F3gV+I/wA/1BC85+JqKvZ367cc79DqgGdgMvA39yzm2M0EUzcLkFwyNOJaiOifSBBnyMoErqeeAPZjYxYvuh4ZvorwiSe/8Wsf14YGvENr1yzr1A8H52ToRmQ637kIZEPtS79hGpUozgR98vEthnb/tvAv7Vs79kyAQeBT7mnPtVkmJYBcyyYOhmHhHfF0P3ADea2fAE2uZyxOvBOfc6wXtElMQOFiSZrwS2xbD/lqj7D2MYRJAwr43YdCMwysyeN7NvmdnfRN13MjnnXgOe5u1K3lnAateH1TvCxFeHBcMlP0iQUNsCXAoUAL/sa5WTc64duI0gMVTmUR31L8AnCZ5PUavFMLMM4HvArQlW/d0UVk4WAPPN7MyI7bMJqqPygNeJeEbezHKBr/B2ZXTUYfaHqz4nANcAkRIIZjYOuAH4UFhpdQiIXOHjnJtHcNLpCufcNyPGUABcy9vHkEhVNgRVh/eEVb37wz4HHDPLBtYBf++cqz+Bu76QoLo9D3gfwevyw8CtBNXVfZXw4xA+n/8e+GuCUQZzzWxChH0fltDr0vf11EMMDznnJiRwUnc68JJz7v1hNWyfhtIeYQHBCeV859xtCbT3sYrgfeWw64H/jND+CeCy8O8C4LTwvf7DBCejjit87dQC/4/gs+W74UmIvvo2MBs6K2pnAZGGwzrn7gvfVy8h+E1+V5T26UYJoROnp8qFpCzxZsEZ33UEXxRfj9LWOXcofAGNBCZHzOjOBF5xzvkmAj7knJtI8CX1ZjO7PELbvwImAvc65yYQDBdJZO6YwcBHifYmerjtGQTVYRcQnD1+h5l9qq/tnXPbgcXAYwQfRM8QVChE8QmCDwXC/z8Rsf3hoSHvI/hwfMgs6dU5Ufd/5HCv1Qnss2sfkaq0jmRm94RnnKJ8yex2DARn4geadoLhMp9NVgDOuV8CWQSvgx8m2MfrwEMEw0GjMnr+POhte0+GhknBBoJE0rdj2n8Uh2N4DXgXwXtUn4UVqJMIKv5eBVab2ZyIMfjo7b6O8lndddhY1JMGh6uEDieEnuxyOercJ1cSnHDo82f0kZxzB4DVwMOHq7Yi+jfgWefcquPesmfzzewZ4CmCkx5Rh0a/6Jw7PMzuuwQ/WKIoBNY6534P4JyLWqF9GbA+rOZ9negJ0iKC10N9+LoqIjipdSJ9GHjUOXcwrCz/rwT72emcawr/3krwfjvQnE1w8uJTXY7lRNnpnNsWVtk9C2wKE83biHZf+jwOHyZ4Ph8I36u/z9uJgSgSfV36vp662uWceyrBttuAqWGlzWXOuT95xHHCOecagXPMbISZvR/4Y8SE/VZgkpkNIxgu/yRBYugy+pgQCv0rwRD9AiKecHDB9AyvhQnJvwUawxMyifh34HHnXKLvbWlBCaETZw/dqzhGEm2YUCzCLO46YKVz7vuJ9hMOs6oj2pxGHwI+amYtBEmIwr6WFx6x75fC/18hmIemT+WyoT3Ani6VTWsJEkRRXQn8wjm3L4G2Uwk+lF8Nz+R+n7eHCvSJc+7bzrmJzrnLCYYR/qavbcOzrIXAg+FjcRtwQ6IJHefckwTzXZwdodmzBF90Y2Fm7yU4e/pKXH2eAM/S5bnnnLuZ4At/lPsxHfyF4AzVJWYW5Uxn3GoJKvciV/11sYQgsRW16vBZjjjzbsHw1lFAX4fpdE0OlkasCult/+8Gfh2hn4NhYnI0MJiIcwhB50mHOufcPwNf4MRWErwGnHHEtncBv4/Qxw+AorDqcqgLh2n30eF5hC4mqAR9iqBCqE/zBx1mZvkEX7Q/APyjmZ0bIYYj/YUEKnrNbArBY/eFRHYatp8KXBpW5zQCkRZf4OhEXtSTcFESsn2NIer+v9PldZ3tnKvwjCeRGOLQNaF4iODk3EDzJ4JK/w8lYd9d77+/dLn8F6Ldlz6PQ1zPBZ/XZVwn0g8k2jCsrJ9EkBj6mpmd6BNxHXT//R71fRGC3z4fJ6gUipSwD3+3tBBUi/0fQRLoCmAM0eaHfRfBXInDSOwYHgTmhHEsT6A94Qmn0QTVsCc1JYROnHpgrJldEFaXzMIvux1Z+IP/28B251zk0jgzO9vCVWMsGHc8FejzEA/n3B3OuZHOuSyC43/cOdfnyphwv+8Is9KEQ73+luCLc19j2Au8GJb9QvAD/LkoMYQSmWfksN0E8zucGj4mRUScZNvMzgn/P5+gdDZKLB8nKJUd7ZzLcs6NAnYS/ezp4VjeRzAxdpTs/ONAppnN7dLPJYkMETGzswkmkF3al6EZKeRxYIiZfb7LtkTmixnwnHOtBJMJ32hmyaoUWg78q3MuylCrbsIKgjVEr3baBJxqZp+BziFX3wBWhPdNf+tt/0udcwejdhaeMZ0P3BqehOgTC1Zx7FoFkg8kMkdbQsKz3i9bMME5FqzUNZ2+zQHUtY86gudT1M+I/yV4HfwhTIz9gWDy0UsJzsIeV/iZci9BBfBu4OsEic4TJqyC/Q/gM2FVSSKGE5y5bg0/YxJZwOJ8e3sV0cOLKESxCbj+8FC18PkQxRNAsZkNDb+3XJXA/j/e5fP+XRZhtbiY/By4yoK5Pk7j7bnWTkZvEQy3/4yZfTLJsSTDE8DHwu+u7yCYuzLyvI8k/rr0fT3FwsxGAK3Oue8SvLcmclL5DYJESCL2EVT4nGnB/HIzE+hjFcHvsI8TJIeieoJguOITBM+BeUBTxO/gDwALCYZ6LU4ghvUEn8+XkMCCBeEQxFsJKv58pjFJC0oInSAumPz3CwRP2u3AGufcs1H6MLNHCL4UZpvZngR+OH0I+DRBZc7heUdmRGh/LrDZzH5JkOB6zDmX0NLxHt4N/DwsI38a+G/nXNTxu6XAyvA48oFFURpbMG/PRwgqeyILq5PWEswfs43gdfhAxG7WmdlzBOXbNzvnokzq/AmOXhltHcGY9L7qnLuGYEjBbBdMRNsn4YdGMfARC5bYfhaooO9Vc4f3/yzwPwRzj0TN8B85h1Aiq4wlLLwPPgb8jQUT2j0NfIdgEtcBxYJ5axIZUtIp/PE7HfiqmUWacJ8gmbGny7/jLs/dw/73OOf+PWq7HnyDoGIuyr4Pvx6uM7PfAM8DbUSbGyJhXfb/8XD/rwF/cc5FWeXsyD4bCYazRpm0/jTgO2b2XPj+nEPwvnAifYbgOdhEkLT9Fxd9MuVHCFaAjDpUahvBc+epI7b96fCwpT6YC+x2zh0ervct4H2JJNs9zCOYz+1eS3yeth8TTAr9S4KhZ4kM79gOzA77eBdBoqzPwu9olcBPw+8ckU6khdVhq4Emgs/YSD+enXPPAV8lmDPxlwRDMH2qvSJzb8/18QzBd54GgkqZgcrrpFE4jHImQeVd1M+pAS18Pq8g+O69BXgwfJ+PKqHXpe/rKUYXA0+HnxFfIZgHJ5JweNP/WjApdaRJpcMKnX8leAw2EOHEfJc+niVISP3OOfdy1PYE9/25wJPhSIk2Ijwe4cmnDufc9wgm2L7EzAqjBBBWQW8m+D3d598fXXyB4Pm3Ofx8SspiR6nCBtYJdRERSTUWjENf5pyLMnxTUpSZfZAgqXGN85/zTUQGMDM7zTn35/Bk2BNAScShkCkhrPT6hXPuRFdZSciCBW02uGAyZt++KoA/O+dOaAWkpAYLJpP+BXCdc67P02ZIzwbiGF4REUkRZjaPYHhQWZJDkZg45/6PYFy9iMgDZpZDMM/HdwZoMmgEwVBOJQ9EBrjw/WgDwSTjSgbFQBVCIiIiIiIiIiInGc0hJCIiIiIiIiJyklFCSERERERERETkJKOEkIiIiIiIiIjISUYJIRERERERERGRk4wSQiIiIiIiIiIiJxklhERERERERERETjL/HzkWi4uWGoe/AAAAAElFTkSuQmCC\n",
+      "text/plain": [
+       "<Figure size 1440x216 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "plt.figure(figsize=(20,3))\n",
+    "plt.hist([train_labels[idc]for idc in client_idcs], stacked=True, \n",
+    "         bins=np.arange(min(train_labels)-0.5, max(train_labels) + 1.5, 1),\n",
+    "        label=[\"Client {}\".format(i) for i in range(N_CLIENTS)])\n",
+    "plt.xticks(np.arange(62), mapp)\n",
+    "plt.legend()\n",
+    "plt.show()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "Next, we simulate a clustering structure in the client population, by rotating the data for half of the first 5 clients by 180 degree. We display 10 data samples from the 1st and the 6th client for illustration."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 5,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "for i, client_datum in enumerate(client_data):\n",
+    "    if i<5:\n",
+    "        client_datum.subset_transform = transforms.Compose([transforms.RandomRotation((180,180)),\n",
+    "                                                      transforms.ToTensor()])\n",
+    "    else:\n",
+    "        client_datum.subset_transform = transforms.Compose([transforms.ToTensor()])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 6,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "clients = [Client(ConvNet, lambda x : torch.optim.SGD(x, lr=0.1, momentum=0.9), dat, idnum=i) \n",
+    "           for i, dat in enumerate(client_data)]\n",
+    "server = Server(ConvNet, test_data)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 7,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Client 0:\n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1080x72 with 10 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Client 5:\n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 1080x72 with 10 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "for client in [clients[0], clients[5]]:\n",
+    "    x, y = iter(client.train_loader).next()\n",
+    "\n",
+    "    print(\"Client {}:\".format(client.id))\n",
+    "    plt.figure(figsize=(15,1))\n",
+    "    for i in range(10):\n",
+    "        plt.subplot(1,10,i+1)\n",
+    "        plt.imshow(x[i,0].numpy().T, cmap=\"Greys\")\n",
+    "        plt.title(\"Label: {}\".format(mapp[y[i].item()]))\n",
+    "    plt.show()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "Now everything is set up to run our Clustered Federated Learning algorithm. During training, we will track the mean and std client accuracies, as well as the average and maximum client update norms."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 8,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "<fl_devices.Client at 0x7fefb17a8a90>"
+      ]
+     },
+     "execution_count": 8,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "#differences with my code: clients and server objects\n",
+    "#with client, I pretty much do the same thing except for:\n",
+    "#track id, track weights, calculate and track weight differences\n",
+    "\n",
+    "#with server object, things I don't yet do:\n",
+    "#compute pairwise similarities, cluster clients based on cosine similarity, aggregate based on clusters, compute max\n",
+    "#update norm, compute mean update norm, cache model\n",
+    "\n",
+    "#\n",
+    "\n",
+    "clients[0]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 10,
+   "metadata": {
+    "scrolled": false
+   },
+   "outputs": [
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 864x288 with 2 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "COMMUNICATION_ROUNDS = 80\n",
+    "EPS_1 = 0.4\n",
+    "EPS_2 = 1.6\n",
+    "    \n",
+    "    \n",
+    "cfl_stats = ExperimentLogger()\n",
+    "    \n",
+    "cluster_indices = [np.arange(len(clients)).astype(\"int\")]\n",
+    "client_clusters = [[clients[i] for i in idcs] for idcs in cluster_indices]\n",
+    "\n",
+    "\n",
+    "for c_round in range(1, COMMUNICATION_ROUNDS+1):\n",
+    "\n",
+    "    if c_round == 1:\n",
+    "        for client in clients:\n",
+    "            client.synchronize_with_server(server)\n",
+    "            \n",
+    "    participating_clients = server.select_clients(clients, frac=1.0)\n",
+    "\n",
+    "    for client in participating_clients:\n",
+    "        client.compute_weight_update(epochs=1)\n",
+    "        client.reset()\n",
+    "\n",
+    "    similarities = server.compute_pairwise_similarities(clients)\n",
+    "\n",
+    "    cluster_indices_new = []\n",
+    "    for idc in cluster_indices:\n",
+    "        max_norm = server.compute_max_update_norm([clients[i] for i in idc])\n",
+    "        mean_norm = server.compute_mean_update_norm([clients[i] for i in idc])\n",
+    "        if mean_norm<EPS_1 and max_norm>EPS_2 and len(idc)>2 and c_round>20:\n",
+    "            server.cache_model(idc, clients[idc[0]].W, acc_clients)\n",
+    "            \n",
+    "            c1, c2 = server.cluster_clients(similarities[idc][:,idc]) \n",
+    "            cluster_indices_new += [c1, c2]\n",
+    "             \n",
+    "            cfl_stats.log({\"split\" : c_round})\n",
+    "\n",
+    "        else:\n",
+    "            cluster_indices_new += [idc]\n",
+    "        \n",
+    "    cluster_indices = cluster_indices_new\n",
+    "    client_clusters = [[clients[i] for i in idcs] for idcs in cluster_indices]\n",
+    "\n",
+    "    server.aggregate_clusterwise(client_clusters)\n",
+    "\n",
+    "    acc_clients = [client.evaluate() for client in clients]\n",
+    "    \n",
+    "    cfl_stats.log({\"acc_clients\" : acc_clients, \"mean_norm\" : mean_norm, \"max_norm\" : max_norm,\n",
+    "                  \"rounds\" : c_round, \"clusters\" : cluster_indices})\n",
+    "    \n",
+    "    \n",
+    "    display_train_stats(cfl_stats, EPS_1, EPS_2, COMMUNICATION_ROUNDS)\n",
+    "\n",
+    "    \n",
+    "for idc in cluster_indices:    \n",
+    "    server.cache_model(idc, clients[idc[0]].W, acc_clients)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "The training process resulted in multiple models for every client: A Federated Learning base model as well as more specialized models for the different clusters.  We can now compare their accuracies on the clients' validation sets, and assign each client the model which performed best."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "results = np.zeros([10, len(server.model_cache)])\n",
+    "for i, (idcs, W, accs) in enumerate(server.model_cache):\n",
+    "    results[idcs, i] = np.array(accs)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "As we can see, clustering improoved the accuracy for all clients by about 10%."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "frame = pd.DataFrame(results, columns=[\"FL Model\"]+[\"Model {}\".format(i) \n",
+    "                                                    for i in range(results.shape[1]-1)],\n",
+    "            index = [\"Client {}\".format(i) for i in range(results.shape[0])])\n",
+    "\n",
+    "def highlight_max(s):\n",
+    "    is_max = s == s.max()\n",
+    "    return ['background-color: yellow' if v else '' for v in is_max]\n",
+    "frame.T.style.apply(highlight_max)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 3",
+   "language": "python",
+   "name": "python3"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 3
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython3",
+   "version": "3.8.8"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 2
+}
diff --git a/src_3/__pycache__/clean_data_seq2point.cpython-38.pyc b/src_3/__pycache__/clean_data_seq2point.cpython-38.pyc
index 646c77e..ba3aa9a 100644
Binary files a/src_3/__pycache__/clean_data_seq2point.cpython-38.pyc and b/src_3/__pycache__/clean_data_seq2point.cpython-38.pyc differ
diff --git a/src_3/__pycache__/clean_data_seq2point.cpython-39.pyc b/src_3/__pycache__/clean_data_seq2point.cpython-39.pyc
index 734de9a..5219f30 100644
Binary files a/src_3/__pycache__/clean_data_seq2point.cpython-39.pyc and b/src_3/__pycache__/clean_data_seq2point.cpython-39.pyc differ
diff --git a/src_3/__pycache__/config_file.cpython-38.pyc b/src_3/__pycache__/config_file.cpython-38.pyc
index 8aa73c9..c388bfa 100644
Binary files a/src_3/__pycache__/config_file.cpython-38.pyc and b/src_3/__pycache__/config_file.cpython-38.pyc differ
diff --git a/src_3/__pycache__/config_file.cpython-39.pyc b/src_3/__pycache__/config_file.cpython-39.pyc
index 1e7a4e0..d7c3b9f 100644
Binary files a/src_3/__pycache__/config_file.cpython-39.pyc and b/src_3/__pycache__/config_file.cpython-39.pyc differ
diff --git a/src_3/__pycache__/data_loaders.cpython-38.pyc b/src_3/__pycache__/data_loaders.cpython-38.pyc
index 691c1bf..2f14a70 100644
Binary files a/src_3/__pycache__/data_loaders.cpython-38.pyc and b/src_3/__pycache__/data_loaders.cpython-38.pyc differ
diff --git a/src_3/__pycache__/data_loaders.cpython-39.pyc b/src_3/__pycache__/data_loaders.cpython-39.pyc
index f509243..e4a0ee7 100644
Binary files a/src_3/__pycache__/data_loaders.cpython-39.pyc and b/src_3/__pycache__/data_loaders.cpython-39.pyc differ
diff --git a/src_3/__pycache__/data_utils.cpython-38.pyc b/src_3/__pycache__/data_utils.cpython-38.pyc
new file mode 100644
index 0000000..62a27c2
Binary files /dev/null and b/src_3/__pycache__/data_utils.cpython-38.pyc differ
diff --git a/src_3/__pycache__/fl_devices.cpython-38.pyc b/src_3/__pycache__/fl_devices.cpython-38.pyc
new file mode 100644
index 0000000..5dcea33
Binary files /dev/null and b/src_3/__pycache__/fl_devices.cpython-38.pyc differ
diff --git a/src_3/__pycache__/helper.cpython-38.pyc b/src_3/__pycache__/helper.cpython-38.pyc
new file mode 100644
index 0000000..1db4edc
Binary files /dev/null and b/src_3/__pycache__/helper.cpython-38.pyc differ
diff --git a/src_3/__pycache__/lstm_seq2point.cpython-39.pyc b/src_3/__pycache__/lstm_seq2point.cpython-39.pyc
index 7c85bd3..a467d6b 100644
Binary files a/src_3/__pycache__/lstm_seq2point.cpython-39.pyc and b/src_3/__pycache__/lstm_seq2point.cpython-39.pyc differ
diff --git a/src_3/__pycache__/models.cpython-38.pyc b/src_3/__pycache__/models.cpython-38.pyc
new file mode 100644
index 0000000..b1a16c3
Binary files /dev/null and b/src_3/__pycache__/models.cpython-38.pyc differ
diff --git a/src_3/__pycache__/train_fed.cpython-38.pyc b/src_3/__pycache__/train_fed.cpython-38.pyc
index 83f6934..93837a4 100644
Binary files a/src_3/__pycache__/train_fed.cpython-38.pyc and b/src_3/__pycache__/train_fed.cpython-38.pyc differ
diff --git a/src_3/__pycache__/train_fed.cpython-39.pyc b/src_3/__pycache__/train_fed.cpython-39.pyc
index 51172f4..524c5f3 100644
Binary files a/src_3/__pycache__/train_fed.cpython-39.pyc and b/src_3/__pycache__/train_fed.cpython-39.pyc differ
diff --git a/src_3/clean_data_seq2point_cossim.py b/src_3/clean_data_seq2point_cossim.py
new file mode 100644
index 0000000..e61d9f6
--- /dev/null
+++ b/src_3/clean_data_seq2point_cossim.py
@@ -0,0 +1,352 @@
+import numpy as np
+import pandas as pd
+import random
+import time
+from scipy import stats
+from datetime import timedelta
+
+
+def floor_outliers(df, cap):
+    df['appliance_power'] = df['appliance_power'].mask(df['appliance_power'] > cap, 0)
+    return df
+
+
+def load_all_houses_with_device(path, appliance):
+    df = pd.read_csv(path, usecols=['dataid', 'localminute', 'grid', 'solar', 'solar2', str(appliance)])
+    df['localminute'] = pd.to_datetime(df['localminute'])
+    df = df.fillna(0)
+    df = df.set_index(['localminute'])
+    grouped = df[['dataid', str(appliance)]].groupby(df.dataid).sum()
+    house_ids = grouped[grouped[str(appliance)] > 0].dataid.index.unique()
+    df = df[df.dataid.isin(house_ids)]
+    #df = df.reset_index(drop=True)
+
+    df['net_power'] = df.grid + df.solar + df.solar2
+    df['net_power'] = np.clip(df['net_power']*1000, a_min=0, a_max=None)
+    df['net_power'] = df['net_power'].mask(df['net_power'] > 30000, 0)
+
+    df[str(appliance)] = np.clip(df[str(appliance)]*1000, a_min=0, a_max=None)
+    df['appliance_power'] = df[str(appliance)]
+
+    df = df.drop(columns=['grid', 'solar', 'solar2', str(appliance)])
+    df['appliance_power'] = df['appliance_power'].values.astype('float32')
+    df['net_power'] = df['net_power'].values.astype('float32')
+
+    remove = []
+    cap = []
+    if appliance == "air1":
+        cap = 5000
+        # remove = [1249, 7365, 8849]
+    if appliance == 'clotheswasher1':
+        cap = 1300
+        # remove = [6240]
+    # if appliance == 'drye1':
+    #    remove = [183]
+    if appliance == 'furnace1':
+        cap = 1000
+        # remove = [6703, 3403, 7365, 2126, 10089]
+    if appliance == 'oven1':
+        cap = 5000
+        # remove = [792]
+    if appliance == 'range1':
+        cap = 8000
+        # remove = [7367]
+    if appliance == 'dishwasher1':
+        cap = 1500
+        # remove = [8849, 6240, 7367]
+    # if appliance == 'freezer1':
+    # remove = [9973, 7159]
+    # if appliance == 'heater1':
+    # remove = [2561]
+    if appliance == 'waterheater1':
+        cap = 6000
+        # remove = [10983, 9973, 8627, 2096]
+    if appliance == 'waterheater2':
+        cap = 5000
+        # remove = [8627]
+    if appliance == 'wellpump1':
+        cap = 1600
+        # remove = [10983]
+    if appliance == 'clotheswasher_dryg1':
+        cap = 800
+    if appliance == 'refrigerator1':
+        cap = 2000
+        remove = [984]
+
+        #removing top 20 in terms of power ratio
+        #remove = [145, 183, 335, 387, 526, 1417, 2358, 3383, 4628, 6240, 6526, 6672, 7021, 7069, 7365, 9004, 10554, 10811, 10983, 11878]
+
+        # remove = [2561,
+        #          3976,
+        #          11785,
+        #          142,
+        #          3344,
+        #          8849,
+        #          3996,
+        #          11421,
+        #          3488,
+        #          6178,
+        #          6564,
+        #          9002,
+        #          6703,
+        #          690,
+        #          8627,
+        #          10164,
+        #          6069,
+        #          950,
+        #          5058,
+        #          6594,
+        #          10182,
+        #          5192,
+        #          9290,
+        #          2126,
+        #          984,
+        #          1240,
+        #          9053,
+        #          5982,
+        #          1249,
+        #          8162,
+        #          3700,
+        #          9973,
+        #          5367,
+        #          8825,
+        #          6907,
+        #          7935]
+
+        # #Based on k-means clustering
+        # remove = [145,
+        #           3344,
+        #           4628,
+        #           10554,
+        #           950,
+        #           984,
+        #           1240,
+        #           1249,
+        #           5192,
+        #           5367,
+        #           5982,
+        #           6069,
+        #           6564,
+        #           6594,
+        #           6703,
+        #           6907,
+        #           7935,
+        #           8162,
+        #           8627,
+        #           8849,
+        #           9002,
+        #           11421,
+        #           11785
+        #           ]
+
+        # #Based on homes with incomplete recording length
+        #remove = [145, 3344, 4628, 10554]
+
+        # #Based on building square footage
+        # remove = [
+        #     145,
+        #     690,
+        #     950,
+        #     984,
+        #     1249,
+        #     2561,
+        #     3344,
+        #     3700,
+        #     4628,
+        #     5367,
+        #     5982,
+        #     6907,
+        #     7021,
+        #     8162,
+        #     8849,
+        #     9973,
+        #     10164,
+        #     10554
+        # ]
+        # Based on building square footage
+        # keep = [  142,   183,   335,   387,   526,  1240,  1417,  2126,  2358,
+        #      3383,  3488,  3976,  3996,  5058,  5192,  6069,  6178,  6240,
+        #      6526,  6564,  6594,  6672,  6703,  7069,  7365,  7935,  8627,
+        #      8825,  9002,  9004,  9053,  9290, 10182, 10811, 10983, 11421,
+        #     11785, 11878]
+    if remove:
+        for house in remove:
+            df = df[df['dataid'] != house]
+
+    if cap:
+        df = floor_outliers(df, cap)
+    return df
+
+
+def normalize_x(x_sequence):
+    std = np.std(x_sequence)
+    return (x_sequence - np.mean(x_sequence)) / std
+
+
+def normalize_y(y_sequence):
+    std = np.std(y_sequence)
+    y_mean = np.mean(y_sequence)
+    # y_sequence = np.log(np.add(y_sequence, 1))
+    # sequence_min = np.min(y_sequence)
+    # sequence_max = np.max(y_sequence)
+    # output = (y_sequence - sequence_min) / (sequence_max - sequence_min)
+    return (y_sequence-y_mean)/std, std, y_mean
+
+
+# def normalize_y(y_sequence):
+#     temp_y = [item for subitem in y_sequence for item in subitem]
+#     std = np.std(temp_y)
+#     y_mean = np.mean(temp_y)
+#     # y_sequence = np.log(np.add(y_sequence, 1))
+#     # sequence_min = np.min(y_sequence)
+#     # sequence_max = np.max(y_sequence)
+#     # output = (y_sequence - sequence_min) / (sequence_max - sequence_min)
+#     return [item for subitem in (y_sequence-y_mean)/std for item in subitem], std, y_mean
+
+
+def add_padding(data, window_length):
+    padding = np.zeros(int(window_length/2))
+    data = np.append(data, padding)
+    data = np.insert(data, 0, padding)
+    return data
+
+
+def split_data(data, window_length):
+    data = add_padding(data, window_length)
+    steps = len(data) - window_length
+    data_splits = []
+    for i in range(steps+1):
+        data_splits.append(data[i:window_length+i])
+    return list(data_splits)
+
+
+def synthetic_data(data, ratio, threshold):
+    threshold = min(data.appliance_power.values) + threshold
+    off_ratio = (data.appliance_power.values < threshold).sum() / len(data.appliance_power.values)
+
+    aggregate_data = data.net_power.values
+
+    data = data.appliance_power.values
+
+    differences = []
+    for i in range(len(data) - 1):
+        differences.append(data[i + 1] - data[i])
+
+    chunks = [[]]
+    indices = [[]]
+    time_step = 0
+    chunk_count = 0
+    chunks[chunk_count].append(data[0])
+    indices[chunk_count].append(0)
+    while time_step < len(data) - 1:
+        if differences[time_step] > threshold:
+            time_step += 1
+            chunk_count += 1
+            chunks.append([])
+            indices.append([])
+            chunks[chunk_count].append(data[time_step])
+            indices[chunk_count].append(time_step)
+        elif differences[time_step] < - threshold:
+            time_step += 1
+            chunk_count += 1
+            chunks.append([])
+            indices.append([])
+            chunks[chunk_count].append(data[time_step])
+            indices[chunk_count].append(time_step)
+        else:
+            time_step += 1
+            chunks[chunk_count].append(data[time_step])
+            indices[chunk_count].append(time_step)
+
+    for i in range(len(chunks) - 1):
+        if len(chunks[i]) < 2:
+            chunks[i + 1].insert(0, chunks[i][0])
+            indices[i + 1].insert(0, indices[i][0])
+
+    chunks = [i for i in chunks if len(i) > 1]
+    indices = [i for i in indices if len(i) > 1]
+
+    datapoints_ratio = 2 * abs(off_ratio - ratio)
+    datapoints = int(datapoints_ratio * len(data))
+
+    on_sequences = [(index, value) for index, value in enumerate(chunks) if np.mean(value) > threshold]
+    off_sequences = [(index, value) for index, value in enumerate(chunks) if np.mean(value) <= threshold]
+
+    on_seq_vals = list(zip(*on_sequences))[1]
+    off_seq_vals = list(zip(*off_sequences))[1]
+
+    on_seq_indices = list(zip(*on_sequences))[0]
+    off_seq_indices = list(zip(*off_sequences))[0]
+
+    on_seq_indices = [indices[i] for i in on_seq_indices]
+    off_seq_indices = [indices[i] for i in off_seq_indices]
+
+    if off_ratio > ratio:
+        datapoint_count = 0
+        while datapoint_count < datapoints:
+            random_location = random.randint(0, len(chunks) - 1)
+            random_on_sequence = random.randint(0, len(on_sequences) - 1)
+            chunks.insert(random_location, on_seq_vals[random_on_sequence])
+            indices.insert(random_location, on_seq_indices[random_on_sequence])
+            datapoint_count += len(on_seq_vals[random_on_sequence])
+
+    if off_ratio < ratio:
+        datapoint_count = 0
+        while datapoint_count < datapoints:
+            random_location = random.randint(0, len(chunks) - 1)
+            random_off_sequence = random.randint(0, len(off_sequences) - 1)
+            chunks.insert(random_location, off_seq_vals[random_off_sequence])
+            indices.insert(random_location, off_seq_indices[random_off_sequence])
+            datapoint_count += len(off_sequences[random_off_sequence])
+
+    chunks = [i for subitem in chunks for i in subitem]
+    indices = [i for subitem in indices for i in subitem]
+
+    aggregate_data = [aggregate_data[i] for i in indices]
+    appliance_data = chunks
+
+    return aggregate_data, appliance_data
+
+
+def create_activations(path, appliance, window_length, buildings):
+    data = load_all_houses_with_device(path, appliance)
+    data = [data.loc[data['dataid'] == i] for i in buildings]
+
+    x_sets = []
+    y_sets = []
+    for i in data:
+        i = i.loc[~i.index.duplicated(), :]
+        unique_days = i.index.map(lambda t: t.date()).unique()
+        i['net_power'] = split_data(normalize_x(i['net_power'].values), window_length)
+        for j in unique_days[0:-1]:
+            start_date = j.strftime("%Y-%m-%d")
+            end_date = (j + timedelta(days = 1)).strftime("%Y-%m-%d")
+            day_data = i.loc[(i.index >= start_date) & (i.index < end_date)]
+            X_padded = []
+            for sequence in day_data.net_power:
+                X_padded.append(list(sequence))
+            if len(X_padded) == 1440:
+                x_sets.append(X_padded)
+                y_sets.append(day_data.appliance_power)
+
+    y_data = [i for subset in y_sets for i in subset]
+
+    y_data, std, y_mean = normalize_y(y_sets)
+    y_data = np.reshape(y_data, (-1,1440))
+    x_data = np.array(x_sets, dtype=np.float32)
+    y_data = np.array(y_data, dtype=np.float32)
+
+    examples = list(zip(x_data, y_data))
+    random.shuffle(examples)
+
+    shuffled_x = []
+    shuffled_y = []
+    for i in examples:
+        shuffled_x.append(i[0])
+        shuffled_y.append(i[1])
+
+    x_data = [item for subitem in shuffled_x for item in subitem]
+    y_data = [item for subitem in shuffled_y for item in subitem]
+    y_data = np.reshape(y_data, (-1,1))
+
+    return np.array(x_data, dtype=np.float32), np.array(y_data, dtype=np.float32), np.array(std, dtype=np.float32), np.array(y_mean, dtype=np.float32)
diff --git a/src_3/config_file.py b/src_3/config_file.py
index 9f93537..f6b634b 100644
--- a/src_3/config_file.py
+++ b/src_3/config_file.py
@@ -1,12 +1,13 @@
 path = "/home/Alfredo/input/1min_real_sept_oct_nov_dec2019.csv"
+#path_2 = "/Users/alfredorodriguez/Desktop/input/1min_real_sept_oct_nov2019.csv"
 
 def load_hyperparameters(appliance):
 
     if str(appliance) == "refrigerator1":
         config = dict(
             appliance=str(appliance),
-            epochs=2000,
-            batch_size=2500,
+            epochs=2,
+            batch_size=128,
             learning_rate=3.3180899699083407e-04,#e-06,
             in_channels=1,
             out_channels=16,
diff --git a/src_3/data/MNIST/processed/test.pt b/src_3/data/MNIST/processed/test.pt
deleted file mode 100644
index 7379e51..0000000
Binary files a/src_3/data/MNIST/processed/test.pt and /dev/null differ
diff --git a/src_3/data/MNIST/processed/training.pt b/src_3/data/MNIST/processed/training.pt
deleted file mode 100644
index 12b8e06..0000000
Binary files a/src_3/data/MNIST/processed/training.pt and /dev/null differ
diff --git a/src_3/data/MNIST/raw/t10k-images-idx3-ubyte b/src_3/data/MNIST/raw/t10k-images-idx3-ubyte
deleted file mode 100644
index 1170b2c..0000000
Binary files a/src_3/data/MNIST/raw/t10k-images-idx3-ubyte and /dev/null differ
diff --git a/src_3/data/MNIST/raw/t10k-images-idx3-ubyte.gz b/src_3/data/MNIST/raw/t10k-images-idx3-ubyte.gz
deleted file mode 100644
index 5ace8ea..0000000
Binary files a/src_3/data/MNIST/raw/t10k-images-idx3-ubyte.gz and /dev/null differ
diff --git a/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte b/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte
deleted file mode 100644
index d1c3a97..0000000
Binary files a/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte and /dev/null differ
diff --git a/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte.gz b/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte.gz
deleted file mode 100644
index a7e1415..0000000
Binary files a/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte.gz and /dev/null differ
diff --git a/src_3/data/MNIST/raw/train-images-idx3-ubyte b/src_3/data/MNIST/raw/train-images-idx3-ubyte
deleted file mode 100644
index bbce276..0000000
Binary files a/src_3/data/MNIST/raw/train-images-idx3-ubyte and /dev/null differ
diff --git a/src_3/data/MNIST/raw/train-images-idx3-ubyte.gz b/src_3/data/MNIST/raw/train-images-idx3-ubyte.gz
deleted file mode 100644
index b50e4b6..0000000
Binary files a/src_3/data/MNIST/raw/train-images-idx3-ubyte.gz and /dev/null differ
diff --git a/src_3/data/MNIST/raw/train-labels-idx1-ubyte b/src_3/data/MNIST/raw/train-labels-idx1-ubyte
deleted file mode 100644
index d6b4c5d..0000000
Binary files a/src_3/data/MNIST/raw/train-labels-idx1-ubyte and /dev/null differ
diff --git a/src_3/data/MNIST/raw/train-labels-idx1-ubyte.gz b/src_3/data/MNIST/raw/train-labels-idx1-ubyte.gz
deleted file mode 100644
index 707a576..0000000
Binary files a/src_3/data/MNIST/raw/train-labels-idx1-ubyte.gz and /dev/null differ
diff --git a/src_3/data_loaders.py b/src_3/data_loaders.py
index 4033736..bb85cc0 100644
--- a/src_3/data_loaders.py
+++ b/src_3/data_loaders.py
@@ -46,6 +46,7 @@ class PecanSlice(Dataset):
 
 def make_train_data(config, train_data, appliance, window_length, train_buildings):
     root_path = "/home/Alfredo/input/1min_real_"
+    #root_path = "/Users/alfredorodriguez/Desktop/input/1min_real_"
     train_dataset = PecanStreetDataset(str(root_path) + str(train_data) + "2019.csv", appliance, window_length,
                                              train_buildings)
 
@@ -65,7 +66,7 @@ def make_train_data(config, train_data, appliance, window_length, train_building
 
 def make_test_val_data(config, test_data, appliance, window_length, test_buildings):
     root_path = "/home/Alfredo/input/1min_real_"
-
+    #root_path = "/Users/alfredorodriguez/Desktop/input/1min_real_"
     test_validation_dataset = PecanStreetDataset(str(root_path) + str(test_data) + "2019.csv", appliance, window_length,
                                                 test_buildings)
     seq_std = test_validation_dataset.y_std
diff --git a/src_3/load_data_by_day.py b/src_3/load_data_by_day.py
index e69de29..0ff5f7a 100644
--- a/src_3/load_data_by_day.py
+++ b/src_3/load_data_by_day.py
@@ -0,0 +1,29 @@
+import random
+from clean_data_seq2point import create_activations
+import torch
+from torch.utils.data import Dataset, DataLoader
+import numpy as np
+from lstm_seq2point import LSTM
+import torch.nn as nn
+
+class PecanStreetDataset(Dataset):
+
+    def __init__(self, path, appliance, window_length, buildings):
+        self.x, self.y, self.y_std, self.y_mean = create_activations(
+            path,
+            appliance,
+            window_length,
+            buildings)
+
+        self.n_samples = self.x.shape[0]
+
+        self.x = torch.from_numpy(self.x)
+
+        self.y = torch.from_numpy(self.y)
+
+    def __getitem__(self, index):
+        return self.x[index], self.y[index]
+
+    def __len__(self):
+        return self.n_samples
+
diff --git a/src_3/main_fed_cluster.py b/src_3/main_fed_cluster.py
new file mode 100644
index 0000000..517c260
--- /dev/null
+++ b/src_3/main_fed_cluster.py
@@ -0,0 +1,216 @@
+import wandb
+from data_loaders import make_train_data, make_test_val_data, make_model
+from train_fed import train, test, precision, recall, f1_score
+import torch
+import time
+import gc
+#import lstm
+import config_file
+from clean_data_seq2point import load_all_houses_with_device
+import random
+import optuna
+from data_loaders import PecanStreetDataset
+from torch.utils.data import Dataset, DataLoader
+import matplotlib.pyplot as plt
+import numpy as np
+from lstm_seq2point import LSTM
+from clean_data_seq2point import normalize_y
+from sklearn import metrics
+import pandas as pd
+from scipy import stats
+from matplotlib.lines import Line2D
+import matplotlib.transforms
+import copy
+
+wandb.login()
+
+print(torch.cuda.is_available())
+
+gc.collect()
+torch.cuda.empty_cache()
+
+print(torch.__version__)
+
+
+config_ = config_file.load_hyperparameters("refrigerator1")
+
+device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")
+
+homes = load_all_houses_with_device(config_file.path, config_['appliance'])
+
+def client_update(client_model, optimizer, train_loader, epoch=config_['epochs']):
+    model.train()
+    for e in range(epoch):
+        for batch_idx, (data, target) in enumerate(train_loader):
+            data, target = data.cuda(), target.cuda()
+            optimizer.zero_grad()
+            output = client_model(data)
+            loss = nn.MSELoss(output, target)
+            loss.backward()
+            optimizer.step()
+    return float(loss.item())
+
+def server_aggregate(global_model, client_models):
+    global_dict = global_model.state_dict()
+    for k in global_dict.keys():
+        global_dict[k] = torch.stack([client_models[i].state_dict()[k] for i in range(len(client_models))], 0).mean(0)
+    global_model.load_state_dict(global_dict)
+    for model in client_models:
+        model.load_state_dict(global_model.state_dict())
+
+
+def model_pipeline(hyperparameters, train_months, test_month, appliance, window_length, train_buildings,
+                   test_buildings, patience):
+    with wandb.init(project="march7_FL_trials", config=hyperparameters):
+        wandb.run.name = str(config_['appliance']) + "_Test:" + str(test_buildings) + "_Train:" + str(train_buildings)
+
+        config = wandb.config
+
+        # lengths = [85320, 132480, 132480, 132480, 132480, 132480, 132480]
+
+        global_model, criterion, optimizer = make_model(config)
+
+        client_models = [LSTM(
+            config.in_channels,
+            config.out_channels,
+            config.kernel_size,
+            config.hidden_size_1,
+            config.hidden_size_2,
+            config.fc1,
+            config.batch_size,
+            config.window_size
+        ).to(device) for _ in range(len(train_buildings))]
+
+        for model in client_models:
+            model.load_state_dict(global_model.state_dict())
+
+        initial_weights = [copy.deepcopy(model.state_dict()) for model in client_models]
+
+        optimizers = [torch.optim.AdamW(
+            model.parameters(),
+            lr=config.learning_rate,
+            weight_decay=config.weight_decay
+        ) for model in client_models]
+
+        print(global_model)
+        print("Window Length: ", window_length)
+
+        wandb.watch(global_model, criterion, log="all", log_freq=10)
+
+        validation_loader, test_loader, test_val_seq_std, test_val_seq_mean = make_test_val_data(
+            config,
+            test_month,
+            appliance,
+            window_length,
+            test_buildings
+        )
+
+        test_results = []
+        train_results = []
+        example_ct = 0
+        batch_ct = 0
+        all_epochs = 0
+        for r in range(20):
+            client_losses = 0.0
+            gc.collect()
+            torch.cuda.empty_cache()
+            for i in range(len(train_buildings)):
+                # wandb.watch(client_models[i], criterion, log="all", log_freq=10)
+                time_log = time.time()
+                # scheduler = torch.optim.lr_scheduler.StepLR(optimizers[i], step_size=50, gamma=0.9, verbose=True)
+                scheduler = torch.optim.lr_scheduler.CyclicLR(
+                    optimizers[i],
+                    base_lr=.95 * config_['learning_rate'],
+                    max_lr=1 * config_['learning_rate'],
+                    #step_size_up=50,
+                    #step_size_down=6000,
+                    gamma=1,
+                    cycle_momentum=False,
+                    verbose=False
+                )
+
+                train_loader, train_seq_std, train_seq_mean = make_train_data(
+                    config,
+                    train_months,
+                    appliance,
+                    window_length,
+                    [train_buildings[i]]
+                )
+
+                # loss += client_update(client_models[i], optimizer[i], train_loader, epochs = config.epochs)
+                example_ct, batch_ct, all_epochs, _, client_train_loss = train(
+                    client_models[i].to(device),
+                    train_loader,
+                    validation_loader,
+                    criterion,
+                    optimizers[i],
+                    config,
+                    example_ct,
+                    batch_ct,
+                    all_epochs,
+                    scheduler,
+                    test_val_seq_std,
+                    test_val_seq_mean,
+                    train_seq_std,
+                    train_seq_mean,
+                    patience
+                )
+
+
+                client_losses += client_train_loss
+
+                print("Time to train on one home: ", time.time() - time_log)
+
+
+            new_weights = [copy.deepcopy(model.state_dict()) for model in client_models]
+            print('weight_deltas: ', [torch.sub(new_weights[i].items(), initial_weights[i].items()) for i in range(len(new_weights))])
+
+            client_losses = client_losses / len(train_buildings)
+            server_aggregate(global_model, client_models)
+            test_results.append(test(global_model, test_loader, criterion, test_val_seq_std, test_val_seq_mean))
+            train_results.append(client_losses)
+
+            print("train_results: ", train_results)
+            print("test_results: ", test_results)
+            print("Round_" + str(r) + "_results: ",
+                  test(global_model, test_loader, criterion, test_val_seq_std, test_val_seq_mean))
+
+    return train_results, test_results, global_model
+
+home_ids = homes.dataid.unique()
+
+home_ids_train = [x for x in home_ids if x!=3383]
+
+PATH = "/home/Alfredo/private_nilm/models_power_ratio_filter_with_fl"
+
+final_results = {}
+random.seed(3)
+global_models = []
+best_models = []
+training_homes = list(home_ids)
+
+for i in range(1):
+    gc.collect()
+    torch.cuda.empty_cache()
+    #training_homes.append(i)
+    testing_homes = [3383]
+
+    patience = 20
+    print("patience: ", patience)
+    print("training_home: ", training_homes)
+    print("test_home: ", testing_homes)
+    train_results, test_results, global_model = model_pipeline(
+        config_,
+        'sept_oct_nov',
+        'dec',
+        config_['appliance'],
+        config_['window_size'],
+        training_homes,
+        testing_homes,
+        patience)
+    global_models.append(global_model)
+    result = {"Train_home_" + str(training_homes) + "_Test_home_" + str(testing_homes): test_results}
+    final_results.update(result)
+    print(final_results)
+    global_model.cpu()
+    torch.save(global_model.state_dict(), PATH + "/seq2point_fl_refrigerator_model_3383test_train" + str(len(training_homes)) + "_homes_trial1.pth")
\ No newline at end of file
diff --git a/src_3/train_fed_cluster.py b/src_3/train_fed_cluster.py
new file mode 100644
index 0000000..886308f
--- /dev/null
+++ b/src_3/train_fed_cluster.py
@@ -0,0 +1,311 @@
+import wandb
+import numpy as np
+import torch
+from sklearn import metrics
+from data_loaders import device
+import gc
+import copy
+
+
+def precision(prediction, true):
+    numerator = np.sum([min(l) for l in zip(prediction, true)])
+    return numerator / np.sum(prediction)
+
+
+def recall(prediction, true):
+    numerator = np.sum([min(l) for l in zip(prediction, true)])
+    return numerator / np.sum(true)
+
+
+def f1_score(prec, rec):
+    return 2 * (prec * rec) / (prec + rec)
+
+
+def train(model, loader, validation_loader, criterion, optimizer, config, example_ct, batch_ct, all_epochs,
+          scheduler, val_seq_std, val_seq_mean, train_seq_std, train_seq_mean, patience):  # , privacy_engine):
+
+    the_last_loss = 1000
+    trigger_times = 0
+    mae_compare = 1000.0
+
+    for epoch in (range(config.epochs)):
+        gc.collect()
+        torch.cuda.empty_cache()
+        model.train()
+        epoch_total_loss = 0.0
+        epoch_predictions = []
+        epoch_true_vals = []
+        epoch_abs_diff = 0.0
+        epoch_squ_diff = 0.0
+        epoch_true_sum = 0.0
+        epoch_squ_sum = 0.0
+        batch_number = 0
+        all_epochs += 1
+
+        for _, (features, labels) in enumerate(loader):
+            train_predictions, train_true_vals, loss = train_batch(features, labels, model, optimizer, criterion)
+            epoch_total_loss += float(loss.item())
+            epoch_predictions.append(train_predictions)
+            epoch_true_vals.append(train_true_vals)
+            example_ct += len(features)
+            batch_ct += 1
+            batch_number += 1
+            #When using cyclicLR
+            scheduler.step()
+
+        #When using stepLR
+        #scheduler.step()
+
+        # validation process
+        model.eval()
+        with torch.no_grad():
+            validation_total_loss = 0.0
+            val_abs_diff = 0.0
+            val_squ_diff = 0.0
+            val_true_sum = 0.0
+            val_squ_sum = 0.0
+            val_batch = 0
+
+        val_preds = []
+        val_true = []
+        for features, labels in validation_loader:
+            features, labels = features.to(device), labels.to(device)
+
+            outputs = model(features)
+            loss = criterion(outputs, labels)
+
+            validation_total_loss += float(loss.item())
+
+            val_preds.append(outputs.cpu().detach().numpy())
+            val_true.append(labels.cpu().detach().numpy())
+
+            val_batch += 1
+            del features, labels
+
+        for i in range(len(epoch_predictions)):
+            if len(epoch_predictions[i].shape) == 1:
+                epoch_predictions[i] = [epoch_predictions[i]]
+
+        for i in range(len(epoch_true_vals)):
+            if len(epoch_true_vals[i].shape) == 1:
+                epoch_true_vals[i] = [epoch_true_vals[i]]
+
+        epoch_predictions = [item for sublist in epoch_predictions for item in sublist]
+        epoch_true_vals = [item for sublist in epoch_true_vals for item in sublist]
+
+        for i in range(len(val_preds)):
+            if len(val_preds[i].shape) == 1:
+                val_preds[i] = [val_preds[i]]
+
+        for i in range(len(val_true)):
+            if len(val_true[i].shape) == 1:
+                val_true[i] = [val_true[i]]
+
+        val_preds = [item for sublist in val_preds for item in sublist]
+        val_true = [item for sublist in val_true for item in sublist]
+
+        train_tracker = 0
+        train_examples = 0
+
+        #if any(isinstance(el, list) for el in epoch_predictions):
+        for i in range(len(epoch_predictions)):
+            epoch_true_vals[i] = np.add(np.multiply(epoch_true_vals[i], train_seq_std), train_seq_mean)
+            #epoch_true_vals[i] = np.exp(epoch_true_vals[i]) - 1
+            epoch_predictions[i] = np.add(np.multiply(epoch_predictions[i], train_seq_std), train_seq_mean)
+            #epoch_predictions[i] = np.exp(epoch_predictions[i]) - 1
+            epoch_abs_diff += np.sum(abs(np.subtract(epoch_true_vals[i], epoch_predictions[i])))
+            epoch_squ_diff += np.sum(np.square(np.subtract(epoch_true_vals[i], epoch_predictions[i])))
+            epoch_true_sum += np.sum(epoch_true_vals[i])
+            epoch_squ_sum += np.sum(np.square(epoch_true_vals[i]))
+            train_tracker += 1
+            train_examples += len(epoch_predictions[i])
+
+        epoch_predictions = [item for sublist in epoch_predictions for item in sublist]
+        epoch_true_vals = [item for sublist in epoch_true_vals for item in sublist]
+
+        epoch_precision = precision(epoch_predictions, epoch_true_vals)
+        epoch_recall = recall(epoch_predictions, epoch_true_vals)
+        epoch_r2 = metrics.r2_score(epoch_true_vals, epoch_predictions)
+        epoch_mse = np.mean(np.square(np.subtract(np.array(epoch_true_vals), np.array(epoch_predictions))))
+
+        val_tracker = 0
+        val_examples = 0
+        for i in range(len(val_preds)):
+            val_true[i] = np.add(np.multiply(val_true[i], val_seq_std), val_seq_mean)
+            #val_true[i] = np.exp(val_true[i]) - 1
+            val_preds[i] = np.add(np.multiply(val_preds[i], val_seq_std), val_seq_mean)
+            #val_preds[i] = np.exp(val_preds[i]) - 1
+            val_abs_diff += np.sum(abs(np.subtract(val_true[i], val_preds[i])))
+            val_squ_diff += np.sum(np.square(np.subtract(val_true[i], val_preds[i])))
+            val_true_sum += np.sum(val_true[i])
+            val_squ_sum += np.sum(np.square(val_true[i]))
+            val_tracker += 1
+            val_examples += len(val_preds[i])
+
+        val_preds = [item for sublist in val_preds for item in sublist]
+        val_true = [item for sublist in val_true for item in sublist]
+
+        val_precision = precision(val_preds, val_true)
+        val_recall = recall(val_preds, val_true)
+        val_r2 = metrics.r2_score(val_true, val_preds)
+        val_mse = np.mean(np.square(np.subtract(np.array(val_true), np.array(val_preds))))
+
+        validation_loss = val_abs_diff/val_examples
+        #PATH = r"C:\Users\aar245\Desktop\privacy_preserving_nn\models"
+        if validation_loss < mae_compare:
+            best_model = copy.deepcopy(model)
+            #torch.save(model.state_dict(), PATH+"\\"+str(config.appliance)+"_checkpoint.pth")
+            mae_compare = validation_loss
+
+        wandb.log({
+            'Training_Loss': epoch_total_loss/batch_number, #good
+            'Validation_Loss': validation_total_loss/val_batch, #good
+            'Training_R2': epoch_r2, #good
+            'Validation_R2': val_r2, #good
+            'Training_F1': f1_score(epoch_precision, epoch_recall), #good
+            'Validation_F1': f1_score(val_precision, val_recall), #good
+            'Training_NEP': epoch_abs_diff / epoch_true_sum, #good
+            'Validation_NEP': val_abs_diff / val_true_sum, #good
+            'Training_NDE': epoch_squ_diff / epoch_squ_sum, #good
+            'Validation_NDE': val_squ_diff / val_squ_sum, #good
+            'Training_MAE': epoch_abs_diff / train_examples, #good
+            'Validation_MAE': val_abs_diff / val_examples,
+            'Training_MSE': epoch_mse,
+            'Validation_MSE': val_mse}, #good
+            step=all_epochs)
+
+        # Early stopping
+        current_loss = val_abs_diff / val_examples
+        if current_loss > the_last_loss:
+           trigger_times += 1
+           print('trigger times:', trigger_times)
+
+           if trigger_times >= patience:
+               print('Early stopping!\nStart to test process.')
+               print(f"Loss after " + str(example_ct).zfill(5) + f" batches: {epoch_total_loss/batch_number:.4f}")
+               return example_ct, batch_ct, all_epochs, best_model, epoch_total_loss/batch_number
+
+        else:
+           print('trigger times: 0')
+           #based on global minimum validation MAE achieved
+           the_last_loss = current_loss
+           trigger_times = 0
+
+        # based on local minimum validation MAE achieved
+        #the_last_loss = current_loss
+        print(f"Loss after " + str(example_ct).zfill(5) + f" batches: {epoch_total_loss/batch_number:.4f}")
+    return example_ct, batch_ct, all_epochs, best_model, epoch_total_loss/batch_number
+
+
+def train_batch(features, labels, model, optimizer, criterion):
+
+    features = features.to(device)
+    labels = labels.to(device)
+
+    optimizer.zero_grad()
+
+    outputs = model(features)
+    loss = criterion(outputs, labels)
+
+    y_pred = outputs.cpu().detach().numpy()
+    y_true = labels.cpu().detach().numpy()
+
+    loss.backward()
+
+    optimizer.step()
+    del features, labels
+
+    return y_pred, y_true, loss
+
+
+def train_log(loss, val_loss, example_ct, epoch):
+    loss = float(loss)
+    val_loss = float(val_loss)
+
+    wandb.log({
+        "Rounds_on_all_homes": epoch,
+        "All_Homes_Training_MSE": loss,
+        "All_Homes_Validation_MSE": val_loss})
+    # "All_Homes_Training_R2": training_r2})
+    # step = example_ct)
+    print(f"Loss after " + str(example_ct).zfill(5) + f" total epochs: {loss:.4f}")
+
+
+def test(model, test_loader, criterion, test_seq_std, test_seq_mean):  # , privacy_engine):
+    model.eval()
+    with torch.no_grad():
+        total_loss = 0.0
+        total_steps = 0
+        abs_diff = 0.0
+        squ_diff = 0.0
+        squ_sum = 0.0
+        true_sum = 0.0
+
+        predictions = []
+        true_vals = []
+        for features, labels in test_loader:
+            features, labels = features.to(device), labels.to(device)
+            prediction = model(features)
+            loss = criterion(prediction, labels)
+            total_loss += float(loss.item())
+            total_steps += 1
+            predictions.append(prediction.cpu().detach().numpy())
+            true_vals.append(labels.cpu().detach().numpy())
+            del features, labels
+
+        for i in range(len(predictions)):
+            if len(predictions[i].shape) == 1:
+                predictions[i] = [predictions[i]]
+
+        for i in range(len(true_vals)):
+            if len(true_vals[i].shape) == 1:
+                true_vals[i] = [true_vals[i]]
+
+        predictions = [item for sublist in predictions for item in sublist]
+        true_vals = [item for sublist in true_vals for item in sublist]
+
+        # if not any(isinstance(el, list) for el in predictions):
+        #     predictions = [predictions]
+        #     true_vals = [true_vals]
+
+        tracker = 0
+        test_examples = 0
+        for i in range(len(predictions)):
+            true_vals[i] = np.add(np.multiply(true_vals[i], test_seq_std), test_seq_mean)
+            #true_vals[i] = np.exp(true_vals[i]) - 1
+            predictions[i] = np.add(np.multiply(predictions[i], test_seq_std), test_seq_mean)
+            #predictions[i] = np.exp(predictions[i]) - 1
+            abs_diff += np.sum(abs(np.subtract(true_vals[i], predictions[i])))
+            squ_diff += np.sum(np.square(np.subtract(true_vals[i], predictions[i])))
+            squ_sum += np.sum(np.square(true_vals[i]))
+            true_sum += np.sum(true_vals[i])
+            tracker += 1
+            test_examples += len(predictions[i])
+
+        predictions = [item for sublist in predictions for item in sublist]
+        true_vals = [item for sublist in true_vals for item in sublist]
+
+        local_precision = precision(predictions, true_vals)
+        local_recall = recall(predictions, true_vals)
+        r_squared = metrics.r2_score(true_vals, predictions)
+        mse = np.mean(np.square(np.subtract(np.array(true_vals), np.array(predictions))))
+
+        wandb.log({
+            'Test_Loss': total_loss / total_steps,
+            'Test_R2_Value': r_squared,
+            'Test_F1_Score': f1_score(local_precision, local_recall),
+            'Test_NEP': abs_diff / true_sum,
+            'Test_NDE': squ_diff / squ_sum,
+            'Test_MAE': abs_diff / test_examples,
+            'Test_MSE': mse})
+    # if privacy_engine:
+    # epsilon, best_alpha = privacy_engine.get_privacy_spent()
+    # print("Testing epsilon: ", epsilon)
+    # print("Testing alpha: ", best_alpha)
+
+    #wandb.save("model_final.h5")
+
+    results = [total_loss / total_steps, r_squared, f1_score(local_precision, local_recall),
+               abs_diff / true_sum, squ_diff / squ_sum, abs_diff / test_examples, mse]
+
+    return results
diff --git a/src_3/wandb/debug-internal.log b/src_3/wandb/debug-internal.log
index c828bd3..299926b 120000
--- a/src_3/wandb/debug-internal.log
+++ b/src_3/wandb/debug-internal.log
@@ -1 +1 @@
-run-20220311_141850-eqbqweky/logs/debug-internal.log
\ No newline at end of file
+run-20220411_193638-2nlrb3fk/logs/debug-internal.log
\ No newline at end of file
diff --git a/src_3/wandb/debug.log b/src_3/wandb/debug.log
index 21caf6b..8676000 120000
--- a/src_3/wandb/debug.log
+++ b/src_3/wandb/debug.log
@@ -1 +1 @@
-run-20220311_141850-eqbqweky/logs/debug.log
\ No newline at end of file
+run-20220411_193638-2nlrb3fk/logs/debug.log
\ No newline at end of file
diff --git a/src_3/wandb/latest-run b/src_3/wandb/latest-run
index 1cf3f62..3185355 120000
--- a/src_3/wandb/latest-run
+++ b/src_3/wandb/latest-run
@@ -1 +1 @@
-run-20220311_141850-eqbqweky
\ No newline at end of file
+run-20220411_193638-2nlrb3fk
\ No newline at end of file
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/files/code/src_3/main_fed_cluster.py b/src_3/wandb/run-20220411_175126-30l3gte3/files/code/src_3/main_fed_cluster.py
new file mode 100644
index 0000000..3293d79
--- /dev/null
+++ b/src_3/wandb/run-20220411_175126-30l3gte3/files/code/src_3/main_fed_cluster.py
@@ -0,0 +1,219 @@
+import wandb
+from data_loaders import make_train_data, make_test_val_data, make_model
+from train_fed import train, test, precision, recall, f1_score
+import torch
+import time
+import gc
+#import lstm
+import config_file
+from clean_data_seq2point import load_all_houses_with_device
+import random
+import optuna
+from data_loaders import PecanStreetDataset
+from torch.utils.data import Dataset, DataLoader
+import matplotlib.pyplot as plt
+import numpy as np
+from lstm_seq2point import LSTM
+from clean_data_seq2point import normalize_y
+from sklearn import metrics
+import pandas as pd
+from scipy import stats
+from matplotlib.lines import Line2D
+import matplotlib.transforms
+
+wandb.login()
+
+print(torch.cuda.is_available())
+
+gc.collect()
+torch.cuda.empty_cache()
+
+print(torch.__version__)
+
+
+config_ = config_file.load_hyperparameters("refrigerator1")
+
+device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")
+
+homes = load_all_houses_with_device(config_file.path_2, config_['appliance'])
+
+def client_update(client_model, optimizer, train_loader, epoch=config_['epochs']):
+    model.train()
+    for e in range(epoch):
+        for batch_idx, (data, target) in enumerate(train_loader):
+            data, target = data.cuda(), target.cuda()
+            optimizer.zero_grad()
+            output = client_model(data)
+            loss = nn.MSELoss(output, target)
+            loss.backward()
+            optimizer.step()
+    return float(loss.item())
+
+def server_aggregate(global_model, client_models):
+    global_dict = global_model.state_dict()
+    for k in global_dict.keys():
+        global_dict[k] = torch.stack([client_models[i].state_dict()[k] for i in range(len(client_models))], 0).mean(0)
+    global_model.load_state_dict(global_dict)
+    for model in client_models:
+        model.load_state_dict(global_model.state_dict())
+
+
+def model_pipeline(hyperparameters, train_months, test_month, appliance, window_length, train_buildings,
+                   test_buildings, patience):
+    with wandb.init(project="march7_FL_trials", config=hyperparameters):
+        wandb.run.name = str(config_['appliance']) + "_Test:" + str(test_buildings) + "_Train:" + str(train_buildings)
+
+        config = wandb.config
+
+        # lengths = [85320, 132480, 132480, 132480, 132480, 132480, 132480]
+
+        global_model, criterion, optimizer = make_model(config)
+
+        client_models = [LSTM(
+            config.in_channels,
+            config.out_channels,
+            config.kernel_size,
+            config.hidden_size_1,
+            config.hidden_size_2,
+            config.fc1,
+            config.batch_size,
+            config.window_size
+        ).to(device) for _ in range(len(train_buildings))]
+
+        for model in client_models:
+            model.load_state_dict(global_model.state_dict())
+
+        initial_weights = [model.state_dict() for model in client_models]
+        print("state_dict: ", initial_weights)
+        init_weights = [model.named_parameters() for model in client_models]
+        print("named_params: ", init_weights)
+
+
+        optimizers = [torch.optim.AdamW(
+            model.parameters(),
+            lr=config.learning_rate,
+            weight_decay=config.weight_decay
+        ) for model in client_models]
+
+        print(global_model)
+        print("Window Length: ", window_length)
+
+        wandb.watch(global_model, criterion, log="all", log_freq=10)
+
+        validation_loader, test_loader, test_val_seq_std, test_val_seq_mean = make_test_val_data(
+            config,
+            test_month,
+            appliance,
+            window_length,
+            test_buildings
+        )
+
+        test_results = []
+        train_results = []
+        example_ct = 0
+        batch_ct = 0
+        all_epochs = 0
+        for r in range(20):
+            client_losses = 0.0
+            gc.collect()
+            torch.cuda.empty_cache()
+            for i in range(len(train_buildings)):
+                # wandb.watch(client_models[i], criterion, log="all", log_freq=10)
+                time_log = time.time()
+                # scheduler = torch.optim.lr_scheduler.StepLR(optimizers[i], step_size=50, gamma=0.9, verbose=True)
+                scheduler = torch.optim.lr_scheduler.CyclicLR(
+                    optimizers[i],
+                    base_lr=.95 * config_['learning_rate'],
+                    max_lr=1 * config_['learning_rate'],
+                    #step_size_up=50,
+                    #step_size_down=6000,
+                    gamma=1,
+                    cycle_momentum=False,
+                    verbose=False
+                )
+
+                train_loader, train_seq_std, train_seq_mean = make_train_data(
+                    config,
+                    train_months,
+                    appliance,
+                    window_length,
+                    [train_buildings[i]]
+                )
+
+                # loss += client_update(client_models[i], optimizer[i], train_loader, epochs = config.epochs)
+                example_ct, batch_ct, all_epochs, _, client_train_loss = train(
+                    client_models[i].to(device),
+                    train_loader,
+                    validation_loader,
+                    criterion,
+                    optimizers[i],
+                    config,
+                    example_ct,
+                    batch_ct,
+                    all_epochs,
+                    scheduler,
+                    test_val_seq_std,
+                    test_val_seq_mean,
+                    train_seq_std,
+                    train_seq_mean,
+                    patience
+                )
+
+
+                client_losses += client_train_loss
+
+                print("Time to train on one home: ", time.time() - time_log)
+
+
+            new_weights = [model.state_dict() for model in client_models]
+            print(new_weights)
+
+            client_losses = client_losses / len(train_buildings)
+            server_aggregate(global_model, client_models)
+            test_results.append(test(global_model, test_loader, criterion, test_val_seq_std, test_val_seq_mean))
+            train_results.append(client_losses)
+
+            print("train_results: ", train_results)
+            print("test_results: ", test_results)
+            print("Round_" + str(r) + "_results: ",
+                  test(global_model, test_loader, criterion, test_val_seq_std, test_val_seq_mean))
+
+    return train_results, test_results, global_model
+
+home_ids = homes.dataid.unique()
+
+home_ids_train = [x for x in home_ids if x!=3383]
+
+PATH = "/home/Alfredo/private_nilm/models_power_ratio_filter_with_fl"
+
+final_results = {}
+random.seed(3)
+global_models = []
+best_models = []
+training_homes = list(home_ids)
+
+for i in range(1):
+    gc.collect()
+    torch.cuda.empty_cache()
+    #training_homes.append(i)
+    testing_homes = [3383]
+
+    patience = 20
+    print("patience: ", patience)
+    print("training_home: ", training_homes)
+    print("test_home: ", testing_homes)
+    train_results, test_results, global_model = model_pipeline(
+        config_,
+        'sept_oct_nov',
+        'dec',
+        config_['appliance'],
+        config_['window_size'],
+        training_homes,
+        testing_homes,
+        patience)
+    global_models.append(global_model)
+    result = {"Train_home_" + str(training_homes) + "_Test_home_" + str(testing_homes): test_results}
+    final_results.update(result)
+    print(final_results)
+    global_model.cpu()
+    torch.save(global_model.state_dict(), PATH + "/seq2point_fl_refrigerator_model_3383test_train" + str(len(training_homes)) + "_homes_trial1.pth")
\ No newline at end of file
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/files/conda-environment.yaml b/src_3/wandb/run-20220411_175126-30l3gte3/files/conda-environment.yaml
new file mode 100644
index 0000000..4a31042
--- /dev/null
+++ b/src_3/wandb/run-20220411_175126-30l3gte3/files/conda-environment.yaml
@@ -0,0 +1,369 @@
+name: base
+channels:
+  - defaults
+dependencies:
+  - _ipyw_jlab_nb_ext_conf=0.1.0=py38_0
+  - alabaster=0.7.12=pyhd3eb1b0_0
+  - anaconda=2021.05=py38_0
+  - anaconda-client=1.7.2=py38_0
+  - anaconda-navigator=2.0.3=py38_0
+  - anaconda-project=0.9.1=pyhd3eb1b0_1
+  - anyio=2.2.0=py38hecd8cb5_1
+  - appdirs=1.4.4=py_0
+  - applaunchservices=0.2.1=py_0
+  - appnope=0.1.2=py38hecd8cb5_1001
+  - appscript=1.1.2=py38h9ed2024_0
+  - argh=0.26.2=py38_0
+  - argon2-cffi=20.1.0=py38h9ed2024_1
+  - asn1crypto=1.4.0=py_0
+  - astroid=2.5=py38hecd8cb5_1
+  - astropy=4.2.1=py38h9ed2024_1
+  - async_generator=1.10=pyhd3eb1b0_0
+  - atomicwrites=1.4.0=py_0
+  - attrs=20.3.0=pyhd3eb1b0_0
+  - autopep8=1.5.6=pyhd3eb1b0_0
+  - babel=2.9.0=pyhd3eb1b0_0
+  - backcall=0.2.0=pyhd3eb1b0_0
+  - backports=1.0=pyhd3eb1b0_2
+  - backports.functools_lru_cache=1.6.4=pyhd3eb1b0_0
+  - backports.shutil_get_terminal_size=1.0.0=pyhd3eb1b0_3
+  - backports.tempfile=1.0=pyhd3eb1b0_1
+  - backports.weakref=1.0.post1=py_1
+  - beautifulsoup4=4.9.3=pyha847dfd_0
+  - bitarray=1.9.2=py38h9ed2024_1
+  - bkcharts=0.2=py38_0
+  - black=19.10b0=py_0
+  - blas=1.0=mkl
+  - bleach=3.3.0=pyhd3eb1b0_0
+  - blosc=1.21.0=h2842e9f_0
+  - bokeh=2.3.2=py38hecd8cb5_0
+  - boto=2.49.0=py38_0
+  - bottleneck=1.3.2=py38hf1fa96c_1
+  - brotlipy=0.7.0=py38h9ed2024_1003
+  - bzip2=1.0.8=h1de35cc_0
+  - c-ares=1.17.1=h9ed2024_0
+  - ca-certificates=2021.4.13=hecd8cb5_1
+  - certifi=2020.12.5=py38hecd8cb5_0
+  - cffi=1.14.5=py38h2125817_0
+  - chardet=4.0.0=py38hecd8cb5_1003
+  - click=7.1.2=pyhd3eb1b0_0
+  - cloudpickle=1.6.0=py_0
+  - clyent=1.2.2=py38_1
+  - colorama=0.4.4=pyhd3eb1b0_0
+  - conda=4.10.1=py38hecd8cb5_1
+  - conda-build=3.21.4=py38hecd8cb5_0
+  - conda-content-trust=0.1.1=pyhd3eb1b0_0
+  - conda-env=2.6.0=1
+  - conda-package-handling=1.7.3=py38h9ed2024_1
+  - conda-repo-cli=1.0.4=pyhd3eb1b0_0
+  - conda-token=0.3.0=pyhd3eb1b0_0
+  - conda-verify=3.4.2=py_1
+  - contextlib2=0.6.0.post1=py_0
+  - cryptography=3.4.7=py38h2fd3fbb_0
+  - curl=7.71.1=hb0a8c7a_1
+  - cycler=0.10.0=py38_0
+  - cython=0.29.23=py38h23ab428_0
+  - cytoolz=0.11.0=py38haf1e3a3_0
+  - dask=2021.4.0=pyhd3eb1b0_0
+  - dask-core=2021.4.0=pyhd3eb1b0_0
+  - dbus=1.13.18=h18a8e69_0
+  - decorator=5.0.6=pyhd3eb1b0_0
+  - defusedxml=0.7.1=pyhd3eb1b0_0
+  - diff-match-patch=20200713=py_0
+  - distributed=2021.4.0=py38hecd8cb5_0
+  - docutils=0.17=py38hecd8cb5_1
+  - entrypoints=0.3=py38_0
+  - et_xmlfile=1.0.1=py_1001
+  - expat=2.3.0=h23ab428_2
+  - fastcache=1.1.0=py38h1de35cc_0
+  - filelock=3.0.12=pyhd3eb1b0_1
+  - flake8=3.9.0=pyhd3eb1b0_0
+  - flask=1.1.2=pyhd3eb1b0_0
+  - freetype=2.10.4=ha233b18_0
+  - fsspec=0.9.0=pyhd3eb1b0_0
+  - future=0.18.2=py38_1
+  - get_terminal_size=1.0.0=h7520d66_0
+  - gettext=0.21.0=h7535e17_0
+  - gevent=21.1.2=py38h9ed2024_1
+  - glib=2.68.1=hdf23fa2_0
+  - glob2=0.7=pyhd3eb1b0_0
+  - gmp=6.2.1=h23ab428_2
+  - gmpy2=2.0.8=py38h6ef4df4_3
+  - greenlet=1.0.0=py38h23ab428_2
+  - h5py=2.10.0=py38h3134771_0
+  - hdf5=1.10.4=hfa1e0ec_0
+  - heapdict=1.0.1=py_0
+  - html5lib=1.1=py_0
+  - icu=58.2=h0a44026_3
+  - idna=2.10=pyhd3eb1b0_0
+  - imageio=2.9.0=pyhd3eb1b0_0
+  - imagesize=1.2.0=pyhd3eb1b0_0
+  - importlib-metadata=3.10.0=py38hecd8cb5_0
+  - importlib_metadata=3.10.0=hd3eb1b0_0
+  - iniconfig=1.1.1=pyhd3eb1b0_0
+  - intel-openmp=2021.2.0=hecd8cb5_564
+  - intervaltree=3.1.0=py_0
+  - ipykernel=5.3.4=py38h5ca1d4c_0
+  - ipython=7.22.0=py38h01d92e1_0
+  - ipython_genutils=0.2.0=pyhd3eb1b0_1
+  - ipywidgets=7.6.3=pyhd3eb1b0_1
+  - isort=5.8.0=pyhd3eb1b0_0
+  - itsdangerous=1.1.0=pyhd3eb1b0_0
+  - jbig=2.1=h4d881f8_0
+  - jdcal=1.4.1=py_0
+  - jedi=0.17.2=py38hecd8cb5_1
+  - jinja2=2.11.3=pyhd3eb1b0_0
+  - joblib=1.0.1=pyhd3eb1b0_0
+  - jpeg=9b=he5867d9_2
+  - json5=0.9.5=py_0
+  - jsonschema=3.2.0=py_2
+  - jupyter=1.0.0=py38_7
+  - jupyter-packaging=0.7.12=pyhd3eb1b0_0
+  - jupyter_client=6.1.12=pyhd3eb1b0_0
+  - jupyter_console=6.4.0=pyhd3eb1b0_0
+  - jupyter_core=4.7.1=py38hecd8cb5_0
+  - jupyter_server=1.4.1=py38hecd8cb5_0
+  - jupyterlab=3.0.14=pyhd3eb1b0_1
+  - jupyterlab_pygments=0.1.2=py_0
+  - jupyterlab_server=2.4.0=pyhd3eb1b0_0
+  - jupyterlab_widgets=1.0.0=pyhd3eb1b0_1
+  - keyring=22.3.0=py38hecd8cb5_0
+  - kiwisolver=1.3.1=py38h23ab428_0
+  - krb5=1.18.2=h75d18d8_0
+  - lazy-object-proxy=1.6.0=py38h9ed2024_0
+  - lcms2=2.12=hf1fd2bf_0
+  - libarchive=3.4.2=haa3ed63_0
+  - libcurl=7.71.1=h8a08a2b_1
+  - libcxx=10.0.0=1
+  - libedit=3.1.20210216=h9ed2024_1
+  - libev=4.33=haf1e3a3_0
+  - libffi=3.3=hb1e8313_2
+  - libgfortran=3.0.1=h93005f0_2
+  - libiconv=1.16=h1de35cc_0
+  - liblief=0.10.1=h0a44026_0
+  - libllvm10=10.0.1=h76017ad_5
+  - libpng=1.6.37=ha441bb4_0
+  - libsodium=1.0.18=h1de35cc_0
+  - libspatialindex=1.9.3=h23ab428_0
+  - libssh2=1.9.0=ha12b0ac_1
+  - libtiff=4.2.0=h87d7836_0
+  - libuv=1.40.0=haf1e3a3_0
+  - libwebp-base=1.2.0=h9ed2024_0
+  - libxml2=2.9.10=h7cdb67c_3
+  - libxslt=1.1.34=h83b36ba_0
+  - llvm-openmp=10.0.0=h28b9765_0
+  - llvmlite=0.36.0=py38he4411ff_4
+  - locket=0.2.1=py38hecd8cb5_1
+  - lxml=4.6.3=py38h26b266a_0
+  - lz4-c=1.9.3=h23ab428_0
+  - lzo=2.10=haf1e3a3_2
+  - markupsafe=1.1.1=py38h1de35cc_1
+  - matplotlib=3.3.4=py38hecd8cb5_0
+  - matplotlib-base=3.3.4=py38h8b3ea08_0
+  - mccabe=0.6.1=py38_1
+  - mistune=0.8.4=py38h1de35cc_1001
+  - mkl=2021.2.0=hecd8cb5_269
+  - mkl-service=2.3.0=py38h9ed2024_1
+  - mkl_fft=1.3.0=py38h4a7008c_2
+  - mkl_random=1.2.1=py38hb2f4e1b_2
+  - mock=4.0.3=pyhd3eb1b0_0
+  - more-itertools=8.7.0=pyhd3eb1b0_0
+  - mpc=1.1.0=h6ef4df4_1
+  - mpfr=4.0.2=h9066e36_1
+  - mpmath=1.2.1=py38hecd8cb5_0
+  - msgpack-python=1.0.2=py38hf7b0b51_1
+  - multipledispatch=0.6.0=py38_0
+  - mypy_extensions=0.4.3=py38_0
+  - navigator-updater=0.2.1=py38_0
+  - nbclassic=0.2.6=pyhd3eb1b0_0
+  - nbclient=0.5.3=pyhd3eb1b0_0
+  - nbconvert=6.0.7=py38_0
+  - nbformat=5.1.3=pyhd3eb1b0_0
+  - ncurses=6.2=h0a44026_1
+  - nest-asyncio=1.5.1=pyhd3eb1b0_0
+  - networkx=2.5=py_0
+  - nltk=3.6.1=pyhd3eb1b0_0
+  - nose=1.3.7=pyhd3eb1b0_1006
+  - notebook=6.3.0=py38hecd8cb5_0
+  - numba=0.53.1=py38hb2f4e1b_0
+  - numexpr=2.7.3=py38h5873af2_1
+  - numpy=1.20.1=py38hd6e1bb9_0
+  - numpy-base=1.20.1=py38h585ceec_0
+  - numpydoc=1.1.0=pyhd3eb1b0_1
+  - olefile=0.46=py_0
+  - openpyxl=3.0.7=pyhd3eb1b0_0
+  - openssl=1.1.1k=h9ed2024_0
+  - packaging=20.9=pyhd3eb1b0_0
+  - pandas=1.2.4=py38h23ab428_0
+  - pandoc=2.12=hecd8cb5_0
+  - pandocfilters=1.4.3=py38hecd8cb5_1
+  - parso=0.7.0=py_0
+  - partd=1.2.0=pyhd3eb1b0_0
+  - path=15.1.2=py38hecd8cb5_0
+  - path.py=12.5.0=0
+  - pathlib2=2.3.5=py38hecd8cb5_2
+  - pathspec=0.7.0=py_0
+  - patsy=0.5.1=py38_0
+  - pcre=8.44=hb1e8313_0
+  - pep8=1.7.1=py38_0
+  - pexpect=4.8.0=pyhd3eb1b0_3
+  - pickleshare=0.7.5=pyhd3eb1b0_1003
+  - pillow=8.2.0=py38h5270095_0
+  - pip=21.0.1=py38hecd8cb5_0
+  - pkginfo=1.7.0=py38hecd8cb5_0
+  - pluggy=0.13.1=py38hecd8cb5_0
+  - ply=3.11=py38_0
+  - prometheus_client=0.10.1=pyhd3eb1b0_0
+  - prompt-toolkit=3.0.17=pyh06a4308_0
+  - prompt_toolkit=3.0.17=hd3eb1b0_0
+  - psutil=5.8.0=py38h9ed2024_1
+  - ptyprocess=0.7.0=pyhd3eb1b0_2
+  - py=1.10.0=pyhd3eb1b0_0
+  - py-lief=0.10.1=py38haf313ee_0
+  - pycodestyle=2.6.0=pyhd3eb1b0_0
+  - pycosat=0.6.3=py38h1de35cc_1
+  - pycparser=2.20=py_2
+  - pycurl=7.43.0.6=py38hddc9c9b_0
+  - pydocstyle=6.0.0=pyhd3eb1b0_0
+  - pyerfa=1.7.3=py38h9ed2024_0
+  - pyflakes=2.2.0=pyhd3eb1b0_0
+  - pygments=2.8.1=pyhd3eb1b0_0
+  - pylint=2.7.4=py38hecd8cb5_1
+  - pyls-black=0.4.6=hd3eb1b0_0
+  - pyls-spyder=0.3.2=pyhd3eb1b0_0
+  - pyodbc=4.0.30=py38h0a44026_0
+  - pyopenssl=20.0.1=pyhd3eb1b0_1
+  - pyparsing=2.4.7=pyhd3eb1b0_0
+  - pyqt=5.9.2=py38h655552a_2
+  - pyrsistent=0.17.3=py38haf1e3a3_0
+  - pysocks=1.7.1=py38_1
+  - pytables=3.6.1=py38h4727e94_0
+  - pytest=6.2.3=py38hecd8cb5_2
+  - python=3.8.8=h88f2d9e_5
+  - python-dateutil=2.8.1=pyhd3eb1b0_0
+  - python-jsonrpc-server=0.4.0=py_0
+  - python-language-server=0.36.2=pyhd3eb1b0_0
+  - python-libarchive-c=2.9=pyhd3eb1b0_1
+  - python.app=3=py38h9ed2024_0
+  - pytz=2021.1=pyhd3eb1b0_0
+  - pywavelets=1.1.1=py38haf1e3a3_2
+  - pyyaml=5.4.1=py38h9ed2024_1
+  - pyzmq=20.0.0=py38h23ab428_1
+  - qdarkstyle=2.8.1=py_0
+  - qt=5.9.7=h468cd18_1
+  - qtawesome=1.0.2=pyhd3eb1b0_0
+  - qtconsole=5.0.3=pyhd3eb1b0_0
+  - qtpy=1.9.0=py_0
+  - readline=8.1=h9ed2024_0
+  - regex=2021.4.4=py38h9ed2024_0
+  - requests=2.25.1=pyhd3eb1b0_0
+  - ripgrep=12.1.1=0
+  - rope=0.18.0=py_0
+  - rtree=0.9.7=py38hecd8cb5_1
+  - ruamel_yaml=0.15.100=py38h9ed2024_0
+  - scikit-image=0.18.1=py38hb2f4e1b_0
+  - scikit-learn=0.24.1=py38hb2f4e1b_0
+  - scipy=1.6.2=py38hd5f7400_1
+  - seaborn=0.11.1=pyhd3eb1b0_0
+  - send2trash=1.5.0=pyhd3eb1b0_1
+  - setuptools=52.0.0=py38hecd8cb5_0
+  - simplegeneric=0.8.1=py38_2
+  - singledispatch=3.6.1=pyhd3eb1b0_1001
+  - sip=4.19.8=py38h0a44026_0
+  - six=1.15.0=py38hecd8cb5_0
+  - sniffio=1.2.0=py38hecd8cb5_1
+  - snowballstemmer=2.1.0=pyhd3eb1b0_0
+  - sortedcollections=2.1.0=pyhd3eb1b0_0
+  - sortedcontainers=2.3.0=pyhd3eb1b0_0
+  - soupsieve=2.2.1=pyhd3eb1b0_0
+  - sphinx=4.0.1=pyhd3eb1b0_0
+  - sphinxcontrib=1.0=py38_1
+  - sphinxcontrib-applehelp=1.0.2=pyhd3eb1b0_0
+  - sphinxcontrib-devhelp=1.0.2=pyhd3eb1b0_0
+  - sphinxcontrib-htmlhelp=1.0.3=pyhd3eb1b0_0
+  - sphinxcontrib-jsmath=1.0.1=pyhd3eb1b0_0
+  - sphinxcontrib-qthelp=1.0.3=pyhd3eb1b0_0
+  - sphinxcontrib-serializinghtml=1.1.4=pyhd3eb1b0_0
+  - sphinxcontrib-websupport=1.2.4=py_0
+  - spyder=4.2.5=py38hecd8cb5_0
+  - spyder-kernels=1.10.2=py38hecd8cb5_0
+  - sqlalchemy=1.4.7=py38h9ed2024_0
+  - sqlite=3.35.4=hce871da_0
+  - statsmodels=0.12.2=py38h9ed2024_0
+  - sympy=1.8=py38hecd8cb5_0
+  - tbb=2020.3=h879752b_0
+  - tblib=1.7.0=py_0
+  - terminado=0.9.4=py38hecd8cb5_0
+  - testpath=0.4.4=pyhd3eb1b0_0
+  - textdistance=4.2.1=pyhd3eb1b0_0
+  - threadpoolctl=2.1.0=pyh5ca1d4c_0
+  - three-merge=0.1.1=pyhd3eb1b0_0
+  - tifffile=2020.10.1=py38h0cf3a3e_2
+  - tk=8.6.10=hb0a8c7a_0
+  - toml=0.10.2=pyhd3eb1b0_0
+  - toolz=0.11.1=pyhd3eb1b0_0
+  - tornado=6.1=py38h9ed2024_0
+  - tqdm=4.59.0=pyhd3eb1b0_1
+  - traitlets=5.0.5=pyhd3eb1b0_0
+  - typed-ast=1.4.2=py38h9ed2024_1
+  - typing_extensions=3.7.4.3=pyha847dfd_0
+  - ujson=4.0.2=py38h23ab428_0
+  - unicodecsv=0.14.1=py38_0
+  - unixodbc=2.3.9=haf1e3a3_0
+  - urllib3=1.26.4=pyhd3eb1b0_0
+  - watchdog=1.0.2=py38h9ed2024_1
+  - wcwidth=0.2.5=py_0
+  - webencodings=0.5.1=py38_1
+  - werkzeug=1.0.1=pyhd3eb1b0_0
+  - wheel=0.36.2=pyhd3eb1b0_0
+  - widgetsnbextension=3.5.1=py38_0
+  - wrapt=1.12.1=py38haf1e3a3_1
+  - wurlitzer=2.1.0=py38hecd8cb5_0
+  - xlrd=2.0.1=pyhd3eb1b0_0
+  - xlsxwriter=1.3.8=pyhd3eb1b0_0
+  - xlwings=0.23.0=py38hecd8cb5_0
+  - xlwt=1.3.0=py38_0
+  - xmltodict=0.12.0=py_0
+  - xz=5.2.5=h1de35cc_0
+  - yaml=0.2.5=haf1e3a3_0
+  - yapf=0.31.0=pyhd3eb1b0_0
+  - zeromq=4.3.4=h23ab428_0
+  - zict=2.0.0=pyhd3eb1b0_0
+  - zipp=3.4.1=pyhd3eb1b0_0
+  - zlib=1.2.11=h1de35cc_3
+  - zope=1.0=py38_1
+  - zope.event=4.5.0=py38_0
+  - zope.interface=5.3.0=py38h9ed2024_0
+  - zstd=1.4.5=h41d2c2f_0
+  - pip:
+    - alembic==1.7.5
+    - autopage==0.4.0
+    - cliff==3.9.0
+    - cmaes==0.8.2
+    - cmd2==2.3.1
+    - colorlog==6.6.0
+    - configparser==5.1.0
+    - docker-pycreds==0.4.0
+    - gitdb==4.0.9
+    - gitpython==3.1.24
+    - importlib-resources==5.4.0
+    - mako==1.1.6
+    - mysql-connector==2.2.9
+    - optuna==2.10.0
+    - pathtools==0.1.2
+    - pbr==5.8.0
+    - prettytable==2.4.0
+    - promise==2.3
+    - protobuf==3.19.1
+    - pyperclip==1.8.2
+    - sentry-sdk==1.5.0
+    - shortuuid==1.0.8
+    - smmap==5.0.0
+    - stevedore==3.5.0
+    - subprocess32==3.5.4
+    - termcolor==1.1.0
+    - torch==1.11.0
+    - torchvision==0.12.0
+    - wandb==0.12.7
+    - yaspin==2.1.0
+prefix: /Users/alfredorodriguez/opt/anaconda3
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/files/config.yaml b/src_3/wandb/run-20220411_175126-30l3gte3/files/config.yaml
new file mode 100644
index 0000000..3e34f35
--- /dev/null
+++ b/src_3/wandb/run-20220411_175126-30l3gte3/files/config.yaml
@@ -0,0 +1,62 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.7
+    code_path: code/src_3/main_fed_cluster.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.8.8
+    start_time: 1649713886
+    t:
+      1:
+      - 1
+      - 5
+      3:
+      - 16
+      - 17
+      4: 3.8.8
+      5: 0.12.7
+      8:
+      - 5
+appliance:
+  desc: null
+  value: refrigerator1
+batch_size:
+  desc: null
+  value: 128
+epochs:
+  desc: null
+  value: 2000
+fc1:
+  desc: null
+  value: 211
+fc2:
+  desc: null
+  value: 109
+hidden_size_1:
+  desc: null
+  value: 64
+hidden_size_2:
+  desc: null
+  value: 85
+in_channels:
+  desc: null
+  value: 1
+kernel_size:
+  desc: null
+  value: 7
+learning_rate:
+  desc: null
+  value: 0.0003318089969908341
+out_channels:
+  desc: null
+  value: 16
+weight_decay:
+  desc: null
+  value: 0
+window_size:
+  desc: null
+  value: 249
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/files/diff.patch b/src_3/wandb/run-20220411_175126-30l3gte3/files/diff.patch
new file mode 100644
index 0000000..74c5e61
--- /dev/null
+++ b/src_3/wandb/run-20220411_175126-30l3gte3/files/diff.patch
@@ -0,0 +1,107 @@
+diff --git a/.DS_Store b/.DS_Store
+index 8bb5042..360f06b 100644
+Binary files a/.DS_Store and b/.DS_Store differ
+diff --git a/src_3/.DS_Store b/src_3/.DS_Store
+index 5008ddf..25c5da8 100644
+Binary files a/src_3/.DS_Store and b/src_3/.DS_Store differ
+diff --git a/src_3/__pycache__/clean_data_seq2point.cpython-38.pyc b/src_3/__pycache__/clean_data_seq2point.cpython-38.pyc
+index 646c77e..ba3aa9a 100644
+Binary files a/src_3/__pycache__/clean_data_seq2point.cpython-38.pyc and b/src_3/__pycache__/clean_data_seq2point.cpython-38.pyc differ
+diff --git a/src_3/__pycache__/config_file.cpython-38.pyc b/src_3/__pycache__/config_file.cpython-38.pyc
+index 8aa73c9..c388bfa 100644
+Binary files a/src_3/__pycache__/config_file.cpython-38.pyc and b/src_3/__pycache__/config_file.cpython-38.pyc differ
+diff --git a/src_3/__pycache__/data_loaders.cpython-38.pyc b/src_3/__pycache__/data_loaders.cpython-38.pyc
+index 691c1bf..2f14a70 100644
+Binary files a/src_3/__pycache__/data_loaders.cpython-38.pyc and b/src_3/__pycache__/data_loaders.cpython-38.pyc differ
+diff --git a/src_3/__pycache__/train_fed.cpython-38.pyc b/src_3/__pycache__/train_fed.cpython-38.pyc
+index 83f6934..93837a4 100644
+Binary files a/src_3/__pycache__/train_fed.cpython-38.pyc and b/src_3/__pycache__/train_fed.cpython-38.pyc differ
+diff --git a/src_3/config_file.py b/src_3/config_file.py
+index 9f93537..18fd2ab 100644
+--- a/src_3/config_file.py
++++ b/src_3/config_file.py
+@@ -1,4 +1,5 @@
+ path = "/home/Alfredo/input/1min_real_sept_oct_nov_dec2019.csv"
++path_2 = "/Users/alfredorodriguez/Desktop/input/1min_real_sept_oct_nov2019.csv"
+ 
+ def load_hyperparameters(appliance):
+ 
+@@ -6,7 +7,7 @@ def load_hyperparameters(appliance):
+         config = dict(
+             appliance=str(appliance),
+             epochs=2000,
+-            batch_size=2500,
++            batch_size=128,
+             learning_rate=3.3180899699083407e-04,#e-06,
+             in_channels=1,
+             out_channels=16,
+diff --git a/src_3/data/MNIST/processed/test.pt b/src_3/data/MNIST/processed/test.pt
+deleted file mode 100644
+index 7379e51..0000000
+Binary files a/src_3/data/MNIST/processed/test.pt and /dev/null differ
+diff --git a/src_3/data/MNIST/processed/training.pt b/src_3/data/MNIST/processed/training.pt
+deleted file mode 100644
+index 12b8e06..0000000
+Binary files a/src_3/data/MNIST/processed/training.pt and /dev/null differ
+diff --git a/src_3/data/MNIST/raw/t10k-images-idx3-ubyte b/src_3/data/MNIST/raw/t10k-images-idx3-ubyte
+deleted file mode 100644
+index 1170b2c..0000000
+Binary files a/src_3/data/MNIST/raw/t10k-images-idx3-ubyte and /dev/null differ
+diff --git a/src_3/data/MNIST/raw/t10k-images-idx3-ubyte.gz b/src_3/data/MNIST/raw/t10k-images-idx3-ubyte.gz
+deleted file mode 100644
+index 5ace8ea..0000000
+Binary files a/src_3/data/MNIST/raw/t10k-images-idx3-ubyte.gz and /dev/null differ
+diff --git a/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte b/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte
+deleted file mode 100644
+index d1c3a97..0000000
+Binary files a/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte and /dev/null differ
+diff --git a/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte.gz b/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte.gz
+deleted file mode 100644
+index a7e1415..0000000
+Binary files a/src_3/data/MNIST/raw/t10k-labels-idx1-ubyte.gz and /dev/null differ
+diff --git a/src_3/data/MNIST/raw/train-images-idx3-ubyte b/src_3/data/MNIST/raw/train-images-idx3-ubyte
+deleted file mode 100644
+index bbce276..0000000
+Binary files a/src_3/data/MNIST/raw/train-images-idx3-ubyte and /dev/null differ
+diff --git a/src_3/data/MNIST/raw/train-images-idx3-ubyte.gz b/src_3/data/MNIST/raw/train-images-idx3-ubyte.gz
+deleted file mode 100644
+index b50e4b6..0000000
+Binary files a/src_3/data/MNIST/raw/train-images-idx3-ubyte.gz and /dev/null differ
+diff --git a/src_3/data/MNIST/raw/train-labels-idx1-ubyte b/src_3/data/MNIST/raw/train-labels-idx1-ubyte
+deleted file mode 100644
+index d6b4c5d..0000000
+Binary files a/src_3/data/MNIST/raw/train-labels-idx1-ubyte and /dev/null differ
+diff --git a/src_3/data/MNIST/raw/train-labels-idx1-ubyte.gz b/src_3/data/MNIST/raw/train-labels-idx1-ubyte.gz
+deleted file mode 100644
+index 707a576..0000000
+Binary files a/src_3/data/MNIST/raw/train-labels-idx1-ubyte.gz and /dev/null differ
+diff --git a/src_3/data_loaders.py b/src_3/data_loaders.py
+index 4033736..42b3323 100644
+--- a/src_3/data_loaders.py
++++ b/src_3/data_loaders.py
+@@ -46,6 +46,7 @@ class PecanSlice(Dataset):
+ 
+ def make_train_data(config, train_data, appliance, window_length, train_buildings):
+     root_path = "/home/Alfredo/input/1min_real_"
++    root_path = "/Users/alfredorodriguez/Desktop/input/1min_real_"
+     train_dataset = PecanStreetDataset(str(root_path) + str(train_data) + "2019.csv", appliance, window_length,
+                                              train_buildings)
+ 
+@@ -56,7 +57,7 @@ def make_train_data(config, train_data, appliance, window_length, train_building
+     train_dataset = PecanSlice(train_dataset[0], train_dataset[1])
+ 
+     train_loader = DataLoader(dataset=train_dataset,
+-                              batch_size=config.batch_size,
++                              batch_size=config['batch_size'],
+                               shuffle=False,
+                               num_workers=0)
+ 
+@@ -65,7 +66,7 @@ def make_train_data(config, train_data, appliance, window_length, train_building
+ 
+ def make_test_val_data(config, test_data, appliance, window_length, test_buildings):
+     root_path = "/home/Alfredo/input/1min_real_"
+-
++    root_path = "/Users/alfredorodriguez/Desktop/input/1min_real_"
+     test_validation_dataset = PecanStreetDataset(str(root_path) + str(test_data) + "2019.csv", appliance, window_length,
+                                                 test_buildings)
+     seq_std = test_validation_dataset.y_std
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/files/output.log b/src_3/wandb/run-20220411_175126-30l3gte3/files/output.log
new file mode 100644
index 0000000..09d4557
--- /dev/null
+++ b/src_3/wandb/run-20220411_175126-30l3gte3/files/output.log
@@ -0,0 +1,16024 @@
+state_dict:  [OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+/Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/clean_data_seq2point.py:320: SettingWithCopyWarning:
+A value is trying to be set on a copy of a slice from a DataFrame.
+Try using .loc[row_indexer,col_indexer] = value instead
+See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
+  i['net_power'] = split_data(normalize_x(i['net_power'].values), window_length)
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))]), OrderedDict([('conv1.weight', tensor([[[-0.2211,  0.1462, -0.0223, -0.2028, -0.2774,  0.1089,  0.0229,
+           0.2257,  0.0588,  0.1764]],
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
+         [ 0.0210, -0.0001,  0.0157,  ...,  0.0467, -0.0137, -0.0567],
+         ...,
+         [ 0.0276, -0.0162, -0.0259,  ..., -0.0035,  0.0561, -0.0412],
+         [ 0.0515, -0.0245, -0.0629,  ..., -0.0565,  0.0054, -0.0404],
+         [-0.0351,  0.0484,  0.0203,  ...,  0.0381, -0.0550,  0.0099]]])), ('conv2.bias', tensor([ 0.0455, -0.0236, -0.0462,  0.0209,  0.0426,  0.0178,  0.0314, -0.0565,
+         0.0123, -0.0486, -0.0348, -0.0393,  0.0619, -0.0324, -0.0452, -0.0582,
+        -0.0641,  0.0414,  0.0551,  0.0433, -0.0362, -0.0367, -0.0228, -0.0409,
+        -0.0224,  0.0153, -0.0520,  0.0542, -0.0285, -0.0061])), ('conv3.weight', tensor([[[-6.8378e-02,  7.1665e-04,  7.3659e-02,  9.5509e-03, -5.9986e-02,
+           5.6299e-02],
+         [-1.1875e-02, -7.2966e-02, -7.1973e-02, -2.0295e-02,  2.1537e-02,
+          -2.5640e-02],
+         [-1.1784e-02, -5.9978e-02,  1.5756e-02,  4.9272e-02, -4.7634e-02,
+           4.1144e-02],
+         ...,
+         [-7.3262e-02,  1.2711e-02, -1.8137e-03, -2.1934e-02, -1.0219e-02,
+          -4.4647e-02],
+         [-3.9230e-02,  6.5473e-02,  1.9424e-02, -4.5126e-02,  4.4192e-02,
+          -5.1976e-02],
+         [-7.0882e-02,  6.6080e-02,  3.7188e-02, -6.4726e-03,  4.3869e-02,
+          -2.2448e-02]],
+        [[ 2.2752e-02, -1.5088e-02,  1.0942e-03, -5.3508e-02,  5.3560e-02,
+          -6.7703e-02],
+         [ 4.1311e-02, -5.4133e-02,  5.7510e-02,  2.4466e-02,  4.2011e-02,
+          -2.0296e-02],
+         [-8.6661e-03,  5.0120e-02, -5.5090e-02,  6.3772e-02,  1.1113e-02,
+          -1.4977e-02],
+         ...,
+         [ 3.7408e-02,  4.7720e-02,  9.3996e-03, -4.1708e-03,  2.4701e-02,
+          -3.8393e-02],
+         [ 3.5301e-02,  1.1604e-03,  5.6700e-02,  8.7236e-03,  3.3101e-02,
+          -4.6106e-02],
+         [-2.5568e-02,  1.1128e-02, -4.0843e-02,  5.4585e-02,  6.3625e-02,
+           7.5201e-03]],
+        [[ 2.5980e-02, -5.2644e-02, -5.3014e-02,  3.7687e-02,  7.4276e-02,
+           5.7974e-02],
+         [-5.4052e-02, -6.0671e-02, -2.6018e-02, -1.3028e-02, -3.1227e-02,
+           1.2238e-02],
+         [-6.3546e-02,  8.4384e-04,  5.8267e-03,  7.0428e-02, -2.4045e-02,
+          -1.5071e-02],
+         ...,
+         [ 2.3600e-02, -2.6006e-02, -5.5833e-02,  5.3202e-02,  4.6775e-02,
+          -1.1061e-02],
+         [ 2.4909e-02,  1.4219e-02,  2.5784e-02, -4.8113e-02, -6.8733e-02,
+           9.8940e-03],
+         [ 6.1981e-02, -1.9270e-02, -5.5564e-02, -4.8240e-02, -9.3078e-03,
+           6.1093e-02]],
+        ...,
+        [[-2.8779e-02,  6.9491e-02,  3.8132e-02,  1.0681e-02,  5.7546e-02,
+          -6.8944e-02],
+         [-5.1828e-02, -5.8287e-02,  5.0606e-03, -3.8236e-02,  5.7284e-02,
+          -6.1961e-02],
+         [-1.6988e-02,  6.7667e-02,  3.1350e-02, -4.5355e-02, -1.3445e-02,
+           1.3429e-02],
+         ...,
+         [-4.9196e-03, -8.8212e-03,  4.7978e-02,  3.6273e-02, -1.5900e-02,
+          -1.4122e-02],
+         [-6.0819e-02, -2.4059e-03, -2.0230e-02, -2.9756e-02, -6.3682e-02,
+           6.1847e-03],
+         [-5.5612e-02, -4.1189e-02, -2.0275e-02, -2.1689e-02, -6.5197e-02,
+          -1.0463e-02]],
+        [[ 2.3136e-03,  7.3524e-02, -2.9373e-02,  3.1960e-02, -5.6070e-02,
+          -1.6960e-02],
+         [ 7.0116e-03,  5.4375e-03,  3.7778e-02,  3.5077e-05, -5.3925e-02,
+          -6.3319e-02],
+         [ 5.3886e-02,  2.8950e-02, -6.9062e-02,  7.4155e-02, -2.7676e-02,
+           4.4957e-02],
+         ...,
+         [ 5.8120e-02, -6.6495e-02,  6.0337e-02, -5.6734e-02, -6.0756e-03,
+           6.7593e-02],
+         [-3.4375e-02, -6.2116e-02, -3.7485e-03,  4.0710e-02, -5.1466e-03,
+          -5.0655e-02],
+         [-2.1011e-02, -2.0234e-02, -4.9295e-02,  5.8174e-02,  3.5835e-02,
+          -3.0269e-02]],
+        [[-3.0968e-02,  6.9609e-02, -5.4755e-02, -1.2673e-02, -4.0384e-02,
+           1.0659e-02],
+         [ 7.2263e-02,  5.9031e-03, -1.9211e-02, -1.7812e-02,  4.5394e-02,
+           4.5901e-02],
+         [ 2.8845e-03,  6.0445e-02,  5.8853e-02,  7.2287e-02,  7.0700e-02,
+          -1.5090e-02],
+         ...,
+         [-2.7882e-02,  3.6690e-02, -4.8817e-03,  7.1416e-02, -6.3892e-02,
+          -7.0749e-02],
+         [-7.1918e-02, -7.8725e-03, -2.2738e-02,  4.7664e-02,  5.0373e-02,
+           3.3981e-02],
+         [-6.1073e-02,  2.6729e-02,  1.1635e-02,  7.2184e-02,  3.6585e-02,
+           6.0799e-02]]])), ('conv3.bias', tensor([-0.0154,  0.0010, -0.0001,  0.0587,  0.0012, -0.0269,  0.0374,  0.0600,
+         0.0602, -0.0060,  0.0474,  0.0437,  0.0241,  0.0065,  0.0466,  0.0317,
+        -0.0499,  0.0032,  0.0038,  0.0075,  0.0709,  0.0174, -0.0480,  0.0678,
+         0.0671, -0.0040, -0.0395, -0.0133, -0.0396,  0.0307, -0.0452,  0.0578,
+        -0.0208,  0.0728, -0.0187, -0.0710, -0.0682, -0.0167, -0.0020,  0.0626])), ('conv4.weight', tensor([[[ 0.0398,  0.0476,  0.0217, -0.0423,  0.0639],
+         [ 0.0112,  0.0151,  0.0082, -0.0655, -0.0604],
+         [-0.0317, -0.0550,  0.0421, -0.0142, -0.0394],
+         ...,
+         [ 0.0697,  0.0292,  0.0003,  0.0567, -0.0204],
+         [ 0.0221,  0.0345, -0.0346,  0.0056, -0.0264],
+         [-0.0222,  0.0423, -0.0029, -0.0136,  0.0555]],
+        [[-0.0372,  0.0283,  0.0068, -0.0335,  0.0333],
+         [ 0.0490,  0.0694, -0.0557,  0.0213,  0.0106],
+         [ 0.0643,  0.0052, -0.0016, -0.0201,  0.0661],
+         ...,
+         [-0.0143,  0.0010, -0.0479, -0.0341,  0.0535],
+         [ 0.0311,  0.0168, -0.0630, -0.0634, -0.0488],
+         [-0.0207, -0.0520,  0.0445,  0.0254,  0.0284]],
+        [[-0.0077, -0.0432, -0.0247, -0.0696,  0.0343],
+         [ 0.0526,  0.0109,  0.0647, -0.0436, -0.0598],
+         [-0.0372,  0.0448,  0.0631, -0.0515,  0.0481],
+         ...,
+         [-0.0078, -0.0201,  0.0079, -0.0506, -0.0096],
+         [ 0.0485,  0.0246, -0.0111,  0.0335,  0.0222],
+         [ 0.0540,  0.0389, -0.0524, -0.0474,  0.0152]],
+        ...,
+        [[ 0.0301,  0.0405, -0.0089, -0.0690, -0.0099],
+         [-0.0685, -0.0200,  0.0487,  0.0467, -0.0037],
+         [ 0.0225, -0.0256,  0.0448,  0.0649,  0.0358],
+         ...,
+         [ 0.0287,  0.0403,  0.0588,  0.0232,  0.0185],
+         [ 0.0522,  0.0150,  0.0353, -0.0563, -0.0109],
+         [ 0.0568,  0.0467,  0.0338,  0.0398, -0.0241]],
+        [[ 0.0521, -0.0182, -0.0278,  0.0323, -0.0578],
+         [-0.0664, -0.0630,  0.0151, -0.0541,  0.0270],
+         [ 0.0472,  0.0070,  0.0038,  0.0453, -0.0269],
+         ...,
+         [-0.0003, -0.0586,  0.0626,  0.0488, -0.0550],
+         [ 0.0375, -0.0012,  0.0538,  0.0275, -0.0135],
+         [-0.0462, -0.0204,  0.0319,  0.0097,  0.0545]],
+        [[ 0.0210,  0.0655,  0.0444, -0.0649,  0.0274],
+         [-0.0115,  0.0047,  0.0691,  0.0427,  0.0212],
+         [-0.0280,  0.0170,  0.0466, -0.0228, -0.0225],
+         ...,
+         [ 0.0036,  0.0396,  0.0458, -0.0484,  0.0648],
+         [-0.0421, -0.0138,  0.0247,  0.0293,  0.0434],
+         [-0.0703,  0.0095,  0.0063, -0.0645, -0.0091]]])), ('conv4.bias', tensor([-0.0655, -0.0290,  0.0238, -0.0035,  0.0630, -0.0423, -0.0064, -0.0433,
+         0.0449, -0.0671,  0.0546,  0.0099, -0.0230, -0.0613,  0.0267,  0.0043,
+         0.0076,  0.0083,  0.0615,  0.0557, -0.0077,  0.0042,  0.0201, -0.0131,
+        -0.0603, -0.0015,  0.0133,  0.0098, -0.0608, -0.0180,  0.0059,  0.0367,
+         0.0371,  0.0140, -0.0650, -0.0494, -0.0043, -0.0207,  0.0415,  0.0636,
+         0.0539,  0.0141,  0.0684,  0.0254, -0.0116,  0.0101, -0.0629, -0.0371,
+        -0.0085,  0.0060])), ('conv5.weight', tensor([[[ 0.0021,  0.0529, -0.0615,  0.0367, -0.0009],
+         [ 0.0222,  0.0044, -0.0102, -0.0196, -0.0311],
+         [-0.0489,  0.0320, -0.0518,  0.0273, -0.0008],
+         ...,
+         [ 0.0340,  0.0250,  0.0581, -0.0611,  0.0162],
+         [ 0.0251,  0.0383, -0.0587, -0.0441,  0.0400],
+         [ 0.0074, -0.0074, -0.0343, -0.0497, -0.0176]],
+        [[-0.0102,  0.0031, -0.0546, -0.0367, -0.0588],
+         [ 0.0308,  0.0372,  0.0127,  0.0223, -0.0609],
+         [ 0.0016,  0.0606, -0.0289,  0.0303, -0.0228],
+         ...,
+         [-0.0456,  0.0508,  0.0181,  0.0213, -0.0469],
+         [-0.0243,  0.0164, -0.0387, -0.0216, -0.0573],
+         [ 0.0553,  0.0484, -0.0565, -0.0327, -0.0401]],
+        [[ 0.0380, -0.0292, -0.0515,  0.0343,  0.0406],
+         [-0.0098, -0.0324,  0.0520,  0.0501, -0.0382],
+         [ 0.0538, -0.0336, -0.0563, -0.0050,  0.0029],
+         ...,
+         [-0.0525,  0.0231,  0.0303,  0.0519, -0.0478],
+         [-0.0382,  0.0161,  0.0362, -0.0402, -0.0379],
+         [-0.0090, -0.0156, -0.0371,  0.0355,  0.0193]],
+        ...,
+        [[-0.0168, -0.0268, -0.0092, -0.0083, -0.0200],
+         [ 0.0108,  0.0252, -0.0407,  0.0247, -0.0022],
+         [ 0.0270, -0.0457,  0.0463,  0.0510,  0.0630],
+         ...,
+         [-0.0233, -0.0365, -0.0621, -0.0090, -0.0166],
+         [ 0.0024, -0.0632,  0.0408, -0.0294,  0.0033],
+         [-0.0305,  0.0128, -0.0126, -0.0417, -0.0023]],
+        [[ 0.0437,  0.0393,  0.0338, -0.0064, -0.0481],
+         [-0.0374, -0.0610, -0.0371, -0.0577,  0.0207],
+         [ 0.0283,  0.0371, -0.0047, -0.0632, -0.0265],
+         ...,
+         [-0.0303, -0.0110,  0.0281, -0.0158, -0.0576],
+         [ 0.0242,  0.0302, -0.0547, -0.0213,  0.0087],
+         [-0.0388, -0.0288,  0.0487, -0.0132,  0.0356]],
+        [[-0.0515, -0.0090,  0.0020,  0.0112, -0.0013],
+         [ 0.0495,  0.0591, -0.0243, -0.0601, -0.0450],
+         [-0.0056, -0.0061, -0.0510, -0.0134,  0.0014],
+         ...,
+         [-0.0296, -0.0013,  0.0301,  0.0614, -0.0222],
+         [-0.0548,  0.0363, -0.0020,  0.0298, -0.0228],
+         [-0.0315,  0.0312, -0.0022, -0.0431, -0.0474]]])), ('conv5.bias', tensor([-0.0626,  0.0501,  0.0582,  0.0066,  0.0564,  0.0166, -0.0248,  0.0162,
+        -0.0578, -0.0473,  0.0410, -0.0499, -0.0290, -0.0359, -0.0391,  0.0601,
+         0.0122,  0.0570,  0.0208,  0.0123,  0.0154, -0.0546,  0.0213, -0.0256,
+        -0.0627, -0.0046,  0.0020, -0.0518, -0.0516, -0.0399,  0.0563,  0.0561,
+        -0.0098, -0.0328,  0.0564,  0.0595,  0.0256,  0.0214,  0.0058,  0.0520,
+        -0.0557, -0.0289,  0.0379, -0.0614,  0.0542, -0.0561,  0.0573,  0.0091,
+        -0.0317,  0.0288])), ('linear1.weight', tensor([[-0.0005, -0.0063, -0.0022,  ..., -0.0071,  0.0064,  0.0028],
+        [-0.0077, -0.0093,  0.0050,  ..., -0.0082, -0.0081,  0.0022],
+        [-0.0034,  0.0004, -0.0044,  ..., -0.0006, -0.0052,  0.0091],
+        ...,
+        [-0.0019,  0.0048,  0.0094,  ..., -0.0072, -0.0028, -0.0065],
+        [-0.0011, -0.0037,  0.0090,  ..., -0.0078,  0.0006,  0.0077],
+        [ 0.0047,  0.0074, -0.0054,  ..., -0.0070, -0.0070, -0.0089]])), ('linear1.bias', tensor([-0.0066, -0.0036, -0.0094,  ..., -0.0083, -0.0067, -0.0058])), ('linear2.weight', tensor([[ 0.0134,  0.0023, -0.0243,  ..., -0.0018, -0.0108,  0.0024]])), ('linear2.bias', tensor([0.0075]))])]
+named_params:  [<generator object Module.named_parameters at 0x7fd49eb06660>, <generator object Module.named_parameters at 0x7fd49eb06580>, <generator object Module.named_parameters at 0x7fd49eb064a0>, <generator object Module.named_parameters at 0x7fd49eb06b30>, <generator object Module.named_parameters at 0x7fd49eb06820>, <generator object Module.named_parameters at 0x7fd49eb06900>, <generator object Module.named_parameters at 0x7fd49eb06970>, <generator object Module.named_parameters at 0x7fd49eb06890>, <generator object Module.named_parameters at 0x7fd49eb069e0>, <generator object Module.named_parameters at 0x7fd49eb06ba0>, <generator object Module.named_parameters at 0x7fd49eb06ac0>, <generator object Module.named_parameters at 0x7fd49eb06c10>, <generator object Module.named_parameters at 0x7fd49eb06c80>, <generator object Module.named_parameters at 0x7fd49eb06cf0>, <generator object Module.named_parameters at 0x7fd49eb06d60>, <generator object Module.named_parameters at 0x7fd49eb06dd0>, <generator object Module.named_parameters at 0x7fd49eb06e40>, <generator object Module.named_parameters at 0x7fd49eb06eb0>, <generator object Module.named_parameters at 0x7fd49eb06f20>, <generator object Module.named_parameters at 0x7fd49eb06f90>, <generator object Module.named_parameters at 0x7fd4deb3f040>, <generator object Module.named_parameters at 0x7fd4deb3f0b0>, <generator object Module.named_parameters at 0x7fd4deb3f120>, <generator object Module.named_parameters at 0x7fd4deb3f190>, <generator object Module.named_parameters at 0x7fd4deb3f200>, <generator object Module.named_parameters at 0x7fd4deb3f270>, <generator object Module.named_parameters at 0x7fd4deb3f2e0>, <generator object Module.named_parameters at 0x7fd4deb3f350>, <generator object Module.named_parameters at 0x7fd4deb3f3c0>, <generator object Module.named_parameters at 0x7fd4deb3f430>, <generator object Module.named_parameters at 0x7fd4deb3f4a0>, <generator object Module.named_parameters at 0x7fd4deb3f510>, <generator object Module.named_parameters at 0x7fd4deb3f580>, <generator object Module.named_parameters at 0x7fd4deb3f5f0>, <generator object Module.named_parameters at 0x7fd4deb3f660>, <generator object Module.named_parameters at 0x7fd4deb3f6d0>, <generator object Module.named_parameters at 0x7fd4deb3f740>, <generator object Module.named_parameters at 0x7fd4deb3f7b0>, <generator object Module.named_parameters at 0x7fd4deb3f820>, <generator object Module.named_parameters at 0x7fd4deb3f890>, <generator object Module.named_parameters at 0x7fd4deb3f900>, <generator object Module.named_parameters at 0x7fd4deb3f970>, <generator object Module.named_parameters at 0x7fd4deb3f9e0>, <generator object Module.named_parameters at 0x7fd4deb3fa50>, <generator object Module.named_parameters at 0x7fd4deb3fac0>, <generator object Module.named_parameters at 0x7fd4deb3fb30>, <generator object Module.named_parameters at 0x7fd4deb3fba0>, <generator object Module.named_parameters at 0x7fd4deb3fc10>, <generator object Module.named_parameters at 0x7fd4deb3fc80>, <generator object Module.named_parameters at 0x7fd4deb3fcf0>, <generator object Module.named_parameters at 0x7fd4deb3fd60>, <generator object Module.named_parameters at 0x7fd4deb3fdd0>, <generator object Module.named_parameters at 0x7fd4deb3fe40>, <generator object Module.named_parameters at 0x7fd4deb3feb0>, <generator object Module.named_parameters at 0x7fd4deb3ff20>]
+LSTM(
+  (conv1): Conv1d(1, 30, kernel_size=(10,), stride=(1,))
+  (conv2): Conv1d(30, 30, kernel_size=(8,), stride=(1,))
+  (conv3): Conv1d(30, 40, kernel_size=(6,), stride=(1,))
+  (conv4): Conv1d(40, 50, kernel_size=(5,), stride=(1,))
+  (conv5): Conv1d(50, 50, kernel_size=(5,), stride=(1,))
+  (linear1): Linear(in_features=11000, out_features=1024, bias=True)
+  (linear2): Linear(in_features=1024, out_features=1, bias=True)
+  (relu): ReLU()
+  (leaky): LeakyReLU(negative_slope=0.01)
+  (dropout): Dropout(p=0.2, inplace=False)
+)
+Window Length:  249
+        [[ 0.0268, -0.0457, -0.1264,  0.0798,  0.1105, -0.1303, -0.0339,
+           0.2636, -0.0401,  0.1459]],
+        [[-0.0908, -0.0622,  0.1818,  0.0857,  0.0052, -0.0055, -0.0535,
+          -0.2536, -0.2977, -0.0658]],
+        [[-0.1341, -0.0467,  0.0486, -0.0833, -0.2281, -0.1724,  0.0221,
+           0.1682, -0.3160, -0.1837]],
+        [[-0.0836,  0.2184, -0.1622,  0.3079, -0.1813, -0.1603,  0.1456,
+           0.0704,  0.0603, -0.1633]],
+        [[ 0.3101,  0.2086,  0.0624, -0.0124,  0.1663,  0.1758, -0.0635,
+          -0.2276,  0.2852,  0.2725]],
+        [[ 0.1001,  0.2464, -0.1868,  0.1450, -0.2736, -0.2009,  0.0105,
+           0.0088,  0.0415,  0.2287]],
+        [[ 0.0342,  0.1047, -0.2325, -0.2252, -0.1450, -0.2682, -0.2251,
+           0.2835, -0.0361,  0.1514]],
+        [[ 0.2022,  0.3153, -0.0639, -0.2019,  0.0662, -0.2825, -0.2796,
+           0.0517, -0.0515,  0.3155]],
+        [[-0.1391,  0.0770, -0.2845, -0.1057,  0.0562, -0.0486, -0.1741,
+          -0.1432, -0.0758, -0.1814]],
+        [[-0.1592, -0.2305, -0.1847, -0.1328, -0.1555,  0.2979,  0.1657,
+          -0.2142,  0.0484,  0.1321]],
+        [[ 0.1592, -0.2554,  0.0571, -0.0239, -0.0496, -0.2167, -0.0389,
+          -0.1158,  0.3137,  0.3046]],
+        [[-0.0243, -0.2862,  0.0661,  0.0768, -0.2396,  0.1968, -0.2292,
+          -0.2612, -0.0619,  0.0731]],
+        [[-0.1085, -0.1479, -0.2809, -0.1785, -0.0622,  0.0340,  0.0028,
+          -0.0922,  0.2191, -0.3078]],
+        [[ 0.0766, -0.2413,  0.1297,  0.0673, -0.0312,  0.2771,  0.2676,
+           0.1742,  0.2302,  0.2812]],
+        [[ 0.2222,  0.0627, -0.2281, -0.2032,  0.0202,  0.0880, -0.0994,
+          -0.2747,  0.0560, -0.2644]],
+        [[ 0.2308, -0.0726, -0.1287,  0.2727, -0.3060,  0.2884, -0.2123,
+           0.1070, -0.2399, -0.0099]],
+        [[-0.1534,  0.2457,  0.1876, -0.0912,  0.0637, -0.2570,  0.2093,
+          -0.1949,  0.0950, -0.3010]],
+        [[-0.1028, -0.0656,  0.2348,  0.0198,  0.1541,  0.0312,  0.2412,
+          -0.0971,  0.1564,  0.1822]],
+        [[ 0.2917,  0.0728, -0.0197,  0.2659, -0.0868, -0.3021, -0.1732,
+           0.2285,  0.1374, -0.2581]],
+        [[ 0.3120, -0.0109, -0.0272,  0.2097,  0.1165,  0.2487, -0.0060,
+          -0.1231,  0.1808, -0.2490]],
+        [[-0.0596, -0.2229,  0.1935,  0.1656,  0.2016,  0.1553, -0.1046,
+          -0.2264,  0.0183, -0.0149]],
+        [[ 0.0070,  0.2191, -0.0051,  0.2924, -0.2440, -0.0491,  0.2446,
+          -0.0695, -0.2639,  0.2580]],
+        [[-0.1528, -0.1224, -0.2935,  0.0390,  0.1723,  0.0079,  0.2588,
+          -0.2727,  0.0760, -0.1064]],
+        [[-0.1175, -0.2362, -0.0703, -0.1850, -0.3068, -0.0356, -0.1415,
+          -0.0458, -0.1947, -0.1927]],
+        [[ 0.1601, -0.2534,  0.2439,  0.0388, -0.0169, -0.2914,  0.1486,
+          -0.1392, -0.2412,  0.2398]],
+        [[-0.1785, -0.2490,  0.1604,  0.2503,  0.1336, -0.0751,  0.0159,
+          -0.0840, -0.1018, -0.2816]],
+        [[ 0.1406, -0.0532,  0.0915,  0.1149,  0.0207,  0.0213,  0.1331,
+           0.3073, -0.3006,  0.2704]],
+        [[-0.1016,  0.0767, -0.1770,  0.2333,  0.0814,  0.2186,  0.0743,
+          -0.2543, -0.1202, -0.0338]],
+        [[ 0.2512,  0.2501, -0.0356, -0.0357,  0.0647,  0.0644, -0.2909,
+           0.0273, -0.0282,  0.2713]]])), ('conv1.bias', tensor([-0.1095, -0.2860,  0.0885, -0.1273, -0.1282,  0.3135,  0.2249,  0.0784,
+        -0.0693,  0.3031,  0.0862, -0.1632, -0.1369, -0.0881,  0.0292,  0.0048,
+         0.0548, -0.0173,  0.1275,  0.0302,  0.2225,  0.0354, -0.2897, -0.1129,
+        -0.1732, -0.1541,  0.1607,  0.1704, -0.0080, -0.2693])), ('conv2.weight', tensor([[[-0.0381,  0.0326,  0.0537,  ..., -0.0347, -0.0483, -0.0354],
+         [ 0.0032,  0.0189,  0.0484,  ..., -0.0255,  0.0596, -0.0011],
+         [-0.0425, -0.0104, -0.0417,  ..., -0.0437, -0.0174,  0.0428],
+         ...,
+         [ 0.0147,  0.0378,  0.0012,  ...,  0.0528, -0.0418, -0.0250],
+         [ 0.0443,  0.0563, -0.0506,  ...,  0.0180,  0.0164, -0.0484],
+         [ 0.0253,  0.0236, -0.0601,  ...,  0.0235,  0.0084,  0.0351]],
+        [[-0.0016, -0.0221, -0.0532,  ..., -0.0040,  0.0476, -0.0253],
+         [-0.0078, -0.0410, -0.0036,  ...,  0.0425, -0.0392, -0.0026],
+         [-0.0230,  0.0430, -0.0559,  ...,  0.0075, -0.0254, -0.0077],
+         ...,
+         [ 0.0518, -0.0009, -0.0320,  ..., -0.0202,  0.0154,  0.0061],
+         [ 0.0440,  0.0410, -0.0480,  ..., -0.0465, -0.0589,  0.0019],
+         [ 0.0473, -0.0363, -0.0248,  ..., -0.0365, -0.0048,  0.0282]],
+        [[-0.0638,  0.0176,  0.0044,  ..., -0.0200, -0.0027, -0.0090],
+         [-0.0317,  0.0614,  0.0158,  ...,  0.0642,  0.0186, -0.0198],
+         [-0.0547, -0.0467,  0.0549,  ...,  0.0518, -0.0595,  0.0097],
+         ...,
+         [-0.0407, -0.0097,  0.0451,  ...,  0.0240,  0.0370,  0.0174],
+         [-0.0489,  0.0056, -0.0539,  ...,  0.0371,  0.0129, -0.0312],
+         [-0.0291, -0.0046, -0.0255,  ..., -0.0368, -0.0179,  0.0588]],
+        ...,
+        [[ 0.0469,  0.0054, -0.0527,  ..., -0.0100,  0.0411, -0.0188],
+         [ 0.0110, -0.0549,  0.0439,  ...,  0.0640,  0.0367,  0.0173],
+         [ 0.0440, -0.0458, -0.0568,  ...,  0.0097,  0.0585,  0.0423],
+         ...,
+         [ 0.0388, -0.0095,  0.0213,  ..., -0.0262,  0.0642,  0.0192],
+         [ 0.0056,  0.0030, -0.0026,  ..., -0.0479, -0.0139,  0.0453],
+         [ 0.0240, -0.0463, -0.0568,  ...,  0.0129, -0.0282,  0.0356]],
+        [[-0.0195,  0.0111,  0.0595,  ..., -0.0549, -0.0096,  0.0332],
+         [-0.0091,  0.0342,  0.0342,  ..., -0.0231,  0.0640, -0.0177],
+         [ 0.0406,  0.0057,  0.0097,  ..., -0.0460,  0.0519, -0.0250],
+         ...,
+         [ 0.0591, -0.0285, -0.0097,  ...,  0.0558, -0.0273, -0.0143],
+         [-0.0519,  0.0394, -0.0638,  ...,  0.0012, -0.0175, -0.0197],
+         [ 0.0444,  0.0356,  0.0219,  ..., -0.0116,  0.0575, -0.0540]],
+        [[ 0.0088,  0.0519, -0.0226,  ...,  0.0129,  0.0088,  0.0059],
+         [-0.0409,  0.0478, -0.0015,  ...,  0.0208,  0.0360,  0.0187],
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/files/requirements.txt b/src_3/wandb/run-20220411_175126-30l3gte3/files/requirements.txt
new file mode 100644
index 0000000..15818a7
--- /dev/null
+++ b/src_3/wandb/run-20220411_175126-30l3gte3/files/requirements.txt
@@ -0,0 +1,285 @@
+alabaster==0.7.12
+alembic==1.7.5
+anaconda-client==1.7.2
+anaconda-navigator==2.0.3
+anaconda-project==0.9.1
+anyio==2.2.0
+appdirs==1.4.4
+applaunchservices==0.2.1
+appnope==0.1.2
+appscript==1.1.2
+argh==0.26.2
+argon2-cffi==20.1.0
+asn1crypto==1.4.0
+astroid==2.5
+astropy==4.2.1
+async-generator==1.10
+atomicwrites==1.4.0
+attrs==20.3.0
+autopage==0.4.0
+autopep8==1.5.6
+babel==2.9.0
+backcall==0.2.0
+backports.functools-lru-cache==1.6.4
+backports.shutil-get-terminal-size==1.0.0
+backports.tempfile==1.0
+backports.weakref==1.0.post1
+beautifulsoup4==4.9.3
+bitarray==1.9.2
+bkcharts==0.2
+black==19.10b0
+bleach==3.3.0
+bokeh==2.3.2
+boto==2.49.0
+bottleneck==1.3.2
+brotlipy==0.7.0
+certifi==2020.12.5
+cffi==1.14.5
+chardet==4.0.0
+click==7.1.2
+cliff==3.9.0
+cloudpickle==1.6.0
+clyent==1.2.2
+cmaes==0.8.2
+cmd2==2.3.1
+colorama==0.4.4
+colorlog==6.6.0
+conda-build==3.21.4
+conda-content-trust==0+unknown
+conda-package-handling==1.7.3
+conda-repo-cli==1.0.4
+conda-token==0.3.0
+conda-verify==3.4.2
+conda==4.10.1
+configparser==5.1.0
+contextlib2==0.6.0.post1
+cryptography==3.4.7
+cycler==0.10.0
+cython==0.29.23
+cytoolz==0.11.0
+dask==2021.4.0
+decorator==5.0.6
+defusedxml==0.7.1
+diff-match-patch==20200713
+distributed==2021.4.0
+docker-pycreds==0.4.0
+docutils==0.17
+entrypoints==0.3
+et-xmlfile==1.0.1
+fastcache==1.1.0
+filelock==3.0.12
+flake8==3.9.0
+flask==1.1.2
+fsspec==0.9.0
+future==0.18.2
+gevent==21.1.2
+gitdb==4.0.9
+gitpython==3.1.24
+glob2==0.7
+gmpy2==2.0.8
+greenlet==1.0.0
+h5py==2.10.0
+heapdict==1.0.1
+html5lib==1.1
+idna==2.10
+imageio==2.9.0
+imagesize==1.2.0
+importlib-metadata==3.10.0
+importlib-resources==5.4.0
+iniconfig==1.1.1
+intervaltree==3.1.0
+ipykernel==5.3.4
+ipython-genutils==0.2.0
+ipython==7.22.0
+ipywidgets==7.6.3
+isort==5.8.0
+itsdangerous==1.1.0
+jdcal==1.4.1
+jedi==0.17.2
+jinja2==2.11.3
+joblib==1.0.1
+json5==0.9.5
+jsonschema==3.2.0
+jupyter-client==6.1.12
+jupyter-console==6.4.0
+jupyter-core==4.7.1
+jupyter-packaging==0.7.12
+jupyter-server==1.4.1
+jupyter==1.0.0
+jupyterlab-pygments==0.1.2
+jupyterlab-server==2.4.0
+jupyterlab-widgets==1.0.0
+jupyterlab==3.0.14
+keyring==22.3.0
+kiwisolver==1.3.1
+lazy-object-proxy==1.6.0
+libarchive-c==2.9
+llvmlite==0.36.0
+locket==0.2.1
+lxml==4.6.3
+mako==1.1.6
+markupsafe==1.1.1
+matplotlib==3.3.4
+mccabe==0.6.1
+mistune==0.8.4
+mkl-fft==1.3.0
+mkl-random==1.2.1
+mkl-service==2.3.0
+mock==4.0.3
+more-itertools==8.7.0
+mpmath==1.2.1
+msgpack==1.0.2
+multipledispatch==0.6.0
+mypy-extensions==0.4.3
+mysql-connector==2.2.9
+navigator-updater==0.2.1
+nbclassic==0.2.6
+nbclient==0.5.3
+nbconvert==6.0.7
+nbformat==5.1.3
+nest-asyncio==1.5.1
+networkx==2.5
+nltk==3.6.1
+nose==1.3.7
+notebook==6.3.0
+numba==0.53.1
+numexpr==2.7.3
+numpy==1.20.1
+numpydoc==1.1.0
+olefile==0.46
+openpyxl==3.0.7
+optuna==2.10.0
+packaging==20.9
+pandas==1.2.4
+pandocfilters==1.4.3
+parso==0.7.0
+partd==1.2.0
+path==15.1.2
+pathlib2==2.3.5
+pathspec==0.7.0
+pathtools==0.1.2
+patsy==0.5.1
+pbr==5.8.0
+pep8==1.7.1
+pexpect==4.8.0
+pickleshare==0.7.5
+pillow==8.2.0
+pip==21.0.1
+pkginfo==1.7.0
+pluggy==0.13.1
+ply==3.11
+prettytable==2.4.0
+prometheus-client==0.10.1
+promise==2.3
+prompt-toolkit==3.0.17
+protobuf==3.19.1
+psutil==5.8.0
+ptyprocess==0.7.0
+py==1.10.0
+pycodestyle==2.6.0
+pycosat==0.6.3
+pycparser==2.20
+pycurl==7.43.0.6
+pydocstyle==6.0.0
+pyerfa==1.7.3
+pyflakes==2.2.0
+pygments==2.8.1
+pylint==2.7.4
+pyls-black==0.4.6
+pyls-spyder==0.3.2
+pyodbc==4.0.0-unsupported
+pyopenssl==20.0.1
+pyparsing==2.4.7
+pyperclip==1.8.2
+pyrsistent==0.17.3
+pysocks==1.7.1
+pytest==6.2.3
+python-dateutil==2.8.1
+python-jsonrpc-server==0.4.0
+python-language-server==0.36.2
+pytz==2021.1
+pywavelets==1.1.1
+pyyaml==5.4.1
+pyzmq==20.0.0
+qdarkstyle==2.8.1
+qtawesome==1.0.2
+qtconsole==5.0.3
+qtpy==1.9.0
+regex==2021.4.4
+requests==2.25.1
+rope==0.18.0
+rtree==0.9.7
+ruamel-yaml-conda==0.15.100
+scikit-image==0.18.1
+scikit-learn==0.24.1
+scipy==1.6.2
+seaborn==0.11.1
+send2trash==1.5.0
+sentry-sdk==1.5.0
+setuptools==52.0.0.post20210125
+shortuuid==1.0.8
+simplegeneric==0.8.1
+singledispatch==0.0.0
+six==1.15.0
+smmap==5.0.0
+sniffio==1.2.0
+snowballstemmer==2.1.0
+sortedcollections==2.1.0
+sortedcontainers==2.3.0
+soupsieve==2.2.1
+sphinx==4.0.1
+sphinxcontrib-applehelp==1.0.2
+sphinxcontrib-devhelp==1.0.2
+sphinxcontrib-htmlhelp==1.0.3
+sphinxcontrib-jsmath==1.0.1
+sphinxcontrib-qthelp==1.0.3
+sphinxcontrib-serializinghtml==1.1.4
+sphinxcontrib-websupport==1.2.4
+spyder-kernels==1.10.2
+spyder==4.2.5
+sqlalchemy==1.4.7
+statsmodels==0.12.2
+stevedore==3.5.0
+subprocess32==3.5.4
+sympy==1.8
+tables==3.6.1
+tblib==1.7.0
+termcolor==1.1.0
+terminado==0.9.4
+testpath==0.4.4
+textdistance==4.2.1
+threadpoolctl==2.1.0
+three-merge==0.1.1
+tifffile==2020.10.1
+toml==0.10.2
+toolz==0.11.1
+torch==1.11.0
+torchvision==0.12.0
+tornado==6.1
+tqdm==4.59.0
+traitlets==5.0.5
+typed-ast==1.4.2
+typing-extensions==3.7.4.3
+ujson==4.0.2
+unicodecsv==0.14.1
+urllib3==1.26.4
+wandb==0.12.7
+watchdog==1.0.2
+wcwidth==0.2.5
+webencodings==0.5.1
+werkzeug==1.0.1
+wheel==0.36.2
+widgetsnbextension==3.5.1
+wrapt==1.12.1
+wurlitzer==2.1.0
+xlrd==2.0.1
+xlsxwriter==1.3.8
+xlwings==0.23.0
+xlwt==1.3.0
+xmltodict==0.12.0
+yapf==0.31.0
+yaspin==2.1.0
+zict==2.0.0
+zipp==3.4.1
+zope.event==4.5.0
+zope.interface==5.3.0
\ No newline at end of file
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-metadata.json b/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-metadata.json
new file mode 100644
index 0000000..c663f89
--- /dev/null
+++ b/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-metadata.json
@@ -0,0 +1,22 @@
+{
+    "os": "macOS-10.16-x86_64-i386-64bit",
+    "python": "3.8.8",
+    "heartbeatAt": "2022-04-11T21:51:29.342920",
+    "startedAt": "2022-04-11T21:51:26.566553",
+    "docker": null,
+    "cpu_count": 8,
+    "cuda": null,
+    "args": [],
+    "state": "running",
+    "program": "main_fed_cluster.py",
+    "codePath": "src_3/main_fed_cluster.py",
+    "git": {
+        "remote": "https://github.com/alfredo2261/private_nilm.git",
+        "commit": "a8a3d5e806af30909c800519e376c531b5ef039d"
+    },
+    "email": "aar245@cornell.edu",
+    "root": "/Users/alfredorodriguez/Desktop/fl_and_nilm",
+    "host": "M1",
+    "username": "alfredorodriguez",
+    "executable": "/Users/alfredorodriguez/opt/anaconda3/bin/python"
+}
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-summary.json b/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-summary.json
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-summary.json
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/logs/debug-internal.log b/src_3/wandb/run-20220411_175126-30l3gte3/logs/debug-internal.log
new file mode 100644
index 0000000..e9fc23d
--- /dev/null
+++ b/src_3/wandb/run-20220411_175126-30l3gte3/logs/debug-internal.log
@@ -0,0 +1,99 @@
+2022-04-11 17:51:28,887 INFO    MainThread:73824 [internal.py:wandb_internal():87] W&B internal server running at pid: 73824, started at: 2022-04-11 17:51:28.887099
+2022-04-11 17:51:28,888 INFO    WriterThread:73824 [datastore.py:open_for_write():77] open: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/run-30l3gte3.wandb
+2022-04-11 17:51:28,888 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: check_version
+2022-04-11 17:51:28,889 DEBUG   SenderThread:73824 [sender.py:send():238] send: header
+2022-04-11 17:51:28,889 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: check_version
+2022-04-11 17:51:29,046 DEBUG   SenderThread:73824 [sender.py:send():238] send: run
+2022-04-11 17:51:29,335 INFO    SenderThread:73824 [dir_watcher.py:__init__():169] watching files in: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files
+2022-04-11 17:51:29,335 INFO    SenderThread:73824 [sender.py:_start_run_threads():825] run started: 30l3gte3 with start time 1649713886
+2022-04-11 17:51:29,335 DEBUG   SenderThread:73824 [sender.py:send():238] send: summary
+2022-04-11 17:51:29,336 INFO    SenderThread:73824 [sender.py:_save_file():960] saving file wandb-summary.json with policy end
+2022-04-11 17:51:29,339 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: run_start
+2022-04-11 17:51:29,342 DEBUG   HandlerThread:73824 [meta.py:__init__():40] meta init
+2022-04-11 17:51:29,342 DEBUG   HandlerThread:73824 [meta.py:__init__():54] meta init done
+2022-04-11 17:51:29,342 DEBUG   HandlerThread:73824 [meta.py:probe():214] probe
+2022-04-11 17:51:29,345 DEBUG   HandlerThread:73824 [meta.py:_setup_git():204] setup git
+2022-04-11 17:51:29,414 DEBUG   HandlerThread:73824 [meta.py:_setup_git():211] setup git done
+2022-04-11 17:51:29,414 DEBUG   HandlerThread:73824 [meta.py:_save_code():92] save code
+2022-04-11 17:51:29,444 DEBUG   HandlerThread:73824 [meta.py:_save_code():113] save code done
+2022-04-11 17:51:29,444 DEBUG   HandlerThread:73824 [meta.py:_save_patches():130] save patches
+2022-04-11 17:51:29,971 DEBUG   HandlerThread:73824 [meta.py:_save_patches():172] save patches done
+2022-04-11 17:51:29,971 DEBUG   HandlerThread:73824 [meta.py:_save_pip():58] save pip
+2022-04-11 17:51:29,972 DEBUG   HandlerThread:73824 [meta.py:_save_pip():72] save pip done
+2022-04-11 17:51:29,972 DEBUG   HandlerThread:73824 [meta.py:_save_conda():79] save conda
+2022-04-11 17:51:30,342 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_created():217] file/dir created: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-summary.json
+2022-04-11 17:51:30,342 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_created():217] file/dir created: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/conda-environment.yaml
+2022-04-11 17:51:30,342 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_created():217] file/dir created: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/diff.patch
+2022-04-11 17:51:30,342 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_created():217] file/dir created: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/code/src_3/main_fed_cluster.py
+2022-04-11 17:51:30,342 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_created():217] file/dir created: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/requirements.txt
+2022-04-11 17:51:30,342 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_created():217] file/dir created: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/code/src_3
+2022-04-11 17:51:30,342 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_created():217] file/dir created: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/code
+2022-04-11 17:51:33,215 DEBUG   HandlerThread:73824 [meta.py:_save_conda():89] save conda done
+2022-04-11 17:51:33,215 DEBUG   HandlerThread:73824 [meta.py:probe():252] probe done
+2022-04-11 17:51:33,218 DEBUG   SenderThread:73824 [sender.py:send():238] send: files
+2022-04-11 17:51:33,219 INFO    SenderThread:73824 [sender.py:_save_file():960] saving file wandb-metadata.json with policy now
+2022-04-11 17:51:33,219 INFO    SenderThread:73824 [sender.py:_save_file():960] saving file code/src_3/main_fed_cluster.py with policy now
+2022-04-11 17:51:33,219 INFO    SenderThread:73824 [sender.py:_save_file():960] saving file diff.patch with policy now
+2022-04-11 17:51:33,222 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:51:33,222 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:51:33,355 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_modified():230] file/dir modified: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/conda-environment.yaml
+2022-04-11 17:51:33,355 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_created():217] file/dir created: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-metadata.json
+2022-04-11 17:51:33,355 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_created():217] file/dir created: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/output.log
+2022-04-11 17:51:33,388 DEBUG   SenderThread:73824 [sender.py:send():238] send: run
+2022-04-11 17:51:33,734 INFO    Thread-11 :73824 [upload_job.py:push():137] Uploaded file /var/folders/k0/3wtz0mk93wb8mk6_mmcdt8q80000gn/T/tmp25q23l7wwandb/3b3jp0zu-wandb-metadata.json
+2022-04-11 17:51:33,759 INFO    Thread-13 :73824 [upload_job.py:push():137] Uploaded file /var/folders/k0/3wtz0mk93wb8mk6_mmcdt8q80000gn/T/tmp25q23l7wwandb/zj5qta0c-diff.patch
+2022-04-11 17:51:33,785 INFO    Thread-12 :73824 [upload_job.py:push():137] Uploaded file /var/folders/k0/3wtz0mk93wb8mk6_mmcdt8q80000gn/T/tmp25q23l7wwandb/1wh848tj-code/src_3/main_fed_cluster.py
+2022-04-11 17:51:33,825 INFO    SenderThread:73824 [sender.py:send_run():723] updated run: 30l3gte3
+2022-04-11 17:51:34,360 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_modified():230] file/dir modified: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/config.yaml
+2022-04-11 17:51:40,387 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_modified():230] file/dir modified: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/output.log
+2022-04-11 17:51:48,631 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:51:48,632 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:51:58,663 DEBUG   SenderThread:73824 [sender.py:send():238] send: stats
+2022-04-11 17:52:03,822 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:52:03,822 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:52:18,587 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_modified():230] file/dir modified: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/output.log
+2022-04-11 17:52:19,020 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:52:19,021 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:52:30,041 DEBUG   SenderThread:73824 [sender.py:send():238] send: stats
+2022-04-11 17:52:34,208 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:52:34,209 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:52:49,438 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:52:49,439 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:53:01,459 DEBUG   SenderThread:73824 [sender.py:send():238] send: stats
+2022-04-11 17:53:04,607 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:53:04,608 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:53:19,766 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:53:19,767 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:53:32,898 DEBUG   SenderThread:73824 [sender.py:send():238] send: stats
+2022-04-11 17:53:35,146 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:53:35,147 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:53:50,365 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:53:50,366 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:54:04,336 DEBUG   SenderThread:73824 [sender.py:send():238] send: stats
+2022-04-11 17:54:05,518 DEBUG   HandlerThread:73824 [handler.py:handle_request():130] handle_request: stop_status
+2022-04-11 17:54:05,518 DEBUG   SenderThread:73824 [sender.py:send_request():252] send_request: stop_status
+2022-04-11 17:54:11,134 WARNING MainThread:73824 [internal.py:wandb_internal():146] Internal process interrupt: 1
+2022-04-11 17:54:13,849 WARNING MainThread:73824 [internal.py:wandb_internal():146] Internal process interrupt: 2
+2022-04-11 17:54:13,850 ERROR   MainThread:73824 [internal.py:wandb_internal():149] Internal process interrupted.
+2022-04-11 17:54:14,146 INFO    Thread-8  :73824 [dir_watcher.py:_on_file_modified():230] file/dir modified: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/output.log
+2022-04-11 17:54:14,409 INFO    HandlerThread:73824 [handler.py:finish():731] shutting down handler
+2022-04-11 17:54:14,412 INFO    SenderThread:73824 [sender.py:finish():1091] shutting down sender
+2022-04-11 17:54:14,412 INFO    SenderThread:73824 [dir_watcher.py:finish():283] shutting down directory watcher
+2022-04-11 17:54:14,413 INFO    WriterThread:73824 [datastore.py:close():281] close: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/run-30l3gte3.wandb
+2022-04-11 17:54:15,153 INFO    SenderThread:73824 [dir_watcher.py:finish():313] scan: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files
+2022-04-11 17:54:15,154 INFO    SenderThread:73824 [dir_watcher.py:finish():327] scan save: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/diff.patch diff.patch
+2022-04-11 17:54:15,154 INFO    SenderThread:73824 [dir_watcher.py:finish():327] scan save: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/requirements.txt requirements.txt
+2022-04-11 17:54:15,154 INFO    SenderThread:73824 [dir_watcher.py:finish():327] scan save: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/output.log output.log
+2022-04-11 17:54:15,155 INFO    SenderThread:73824 [dir_watcher.py:finish():327] scan save: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/config.yaml config.yaml
+2022-04-11 17:54:15,170 INFO    SenderThread:73824 [dir_watcher.py:finish():327] scan save: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-summary.json wandb-summary.json
+2022-04-11 17:54:15,174 INFO    SenderThread:73824 [dir_watcher.py:finish():327] scan save: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/conda-environment.yaml conda-environment.yaml
+2022-04-11 17:54:15,179 INFO    SenderThread:73824 [dir_watcher.py:finish():327] scan save: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-metadata.json wandb-metadata.json
+2022-04-11 17:54:15,184 INFO    SenderThread:73824 [dir_watcher.py:finish():327] scan save: /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/code/src_3/main_fed_cluster.py code/src_3/main_fed_cluster.py
+2022-04-11 17:54:15,184 INFO    SenderThread:73824 [file_pusher.py:finish():177] shutting down file pusher
+2022-04-11 17:54:15,185 INFO    SenderThread:73824 [file_pusher.py:join():182] waiting for file pusher
+2022-04-11 17:54:15,730 INFO    Thread-18 :73824 [upload_job.py:push():137] Uploaded file /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/conda-environment.yaml
+2022-04-11 17:54:15,764 INFO    Thread-16 :73824 [upload_job.py:push():137] Uploaded file /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/config.yaml
+2022-04-11 17:54:15,784 INFO    Thread-14 :73824 [upload_job.py:push():137] Uploaded file /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/requirements.txt
+2022-04-11 17:54:15,851 INFO    Thread-15 :73824 [upload_job.py:push():137] Uploaded file /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/output.log
+2022-04-11 17:54:15,953 INFO    Thread-17 :73824 [upload_job.py:push():137] Uploaded file /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/files/wandb-summary.json
+2022-04-11 17:54:16,395 INFO    MainThread:73824 [internal.py:handle_exit():77] Internal process exited
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/logs/debug.log b/src_3/wandb/run-20220411_175126-30l3gte3/logs/debug.log
new file mode 100644
index 0000000..fa638d7
--- /dev/null
+++ b/src_3/wandb/run-20220411_175126-30l3gte3/logs/debug.log
@@ -0,0 +1,28 @@
+2022-04-11 17:51:26,568 INFO    MainThread:73816 [wandb_setup.py:_flush():71] setting env: {}
+2022-04-11 17:51:26,568 INFO    MainThread:73816 [wandb_setup.py:_flush():71] setting login settings: {}
+2022-04-11 17:51:26,568 INFO    MainThread:73816 [wandb_setup.py:_flush():71] setting login settings: {}
+2022-04-11 17:51:26,568 INFO    MainThread:73816 [wandb_init.py:_log_setup():371] Logging user logs to /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/logs/debug.log
+2022-04-11 17:51:26,568 INFO    MainThread:73816 [wandb_init.py:_log_setup():372] Logging internal logs to /Users/alfredorodriguez/Desktop/fl_and_nilm/src_3/wandb/run-20220411_175126-30l3gte3/logs/debug-internal.log
+2022-04-11 17:51:26,568 INFO    MainThread:73816 [wandb_init.py:init():404] calling init triggers
+2022-04-11 17:51:26,568 INFO    MainThread:73816 [wandb_init.py:init():409] wandb.init called with sweep_config: {}
+config: {'appliance': 'refrigerator1', 'epochs': 2000, 'batch_size': 128, 'learning_rate': 0.0003318089969908341, 'in_channels': 1, 'out_channels': 16, 'kernel_size': 7, 'hidden_size_1': 64, 'hidden_size_2': 85, 'fc1': 211, 'fc2': 109, 'weight_decay': 0, 'window_size': 249}
+2022-04-11 17:51:26,568 INFO    MainThread:73816 [wandb_init.py:init():449] starting backend
+2022-04-11 17:51:26,568 INFO    MainThread:73816 [backend.py:_multiprocessing_setup():95] multiprocessing start_methods=spawn,fork,forkserver, using: spawn
+2022-04-11 17:51:26,624 INFO    MainThread:73816 [backend.py:ensure_launched():199] starting backend process...
+2022-04-11 17:51:26,634 INFO    MainThread:73816 [backend.py:ensure_launched():204] started backend process with pid: 73824
+2022-04-11 17:51:26,636 INFO    MainThread:73816 [wandb_init.py:init():458] backend started and connected
+2022-04-11 17:51:26,657 INFO    MainThread:73816 [wandb_init.py:init():519] updated telemetry
+2022-04-11 17:51:27,164 INFO    MainThread:73816 [wandb_init.py:init():549] communicating current version
+2022-04-11 17:51:29,043 INFO    MainThread:73816 [wandb_init.py:init():554] got version response upgrade_message: "wandb version 0.12.14 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2022-04-11 17:51:29,044 INFO    MainThread:73816 [wandb_init.py:init():564] communicating run to backend with 30 second timeout
+2022-04-11 17:51:29,338 INFO    MainThread:73816 [wandb_init.py:init():592] starting run threads in backend
+2022-04-11 17:51:33,221 INFO    MainThread:73816 [wandb_run.py:_console_start():1816] atexit reg
+2022-04-11 17:51:33,222 INFO    MainThread:73816 [wandb_run.py:_redirect():1690] redirect: SettingsConsole.REDIRECT
+2022-04-11 17:51:33,222 INFO    MainThread:73816 [wandb_run.py:_redirect():1695] Redirecting console.
+2022-04-11 17:51:33,223 INFO    MainThread:73816 [wandb_run.py:_redirect():1751] Redirects installed.
+2022-04-11 17:51:33,223 INFO    MainThread:73816 [wandb_init.py:init():619] run started, returning control to user process
+2022-04-11 17:51:37,746 INFO    MainThread:73816 [wandb_watch.py:watch():43] Watching
+2022-04-11 17:54:11,402 INFO    MainThread:73816 [wandb_run.py:finish():1463] finishing run nilm/march7_FL_trials/30l3gte3
+2022-04-11 17:54:11,404 INFO    MainThread:73816 [wandb_run.py:_atexit_cleanup():1786] got exitcode: 1
+2022-04-11 17:54:11,406 INFO    MainThread:73816 [wandb_run.py:_restore():1758] restore
diff --git a/src_3/wandb/run-20220411_175126-30l3gte3/run-30l3gte3.wandb b/src_3/wandb/run-20220411_175126-30l3gte3/run-30l3gte3.wandb
new file mode 100644
index 0000000..44f0bba
Binary files /dev/null and b/src_3/wandb/run-20220411_175126-30l3gte3/run-30l3gte3.wandb differ
